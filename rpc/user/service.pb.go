// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/user/service.proto

package user

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	tag "user-api/rpc/tag"
	track "user-api/rpc/track"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Id                     string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Username               string                  `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email                  string                  `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	DisplayName            string                  `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	FullName               string                  `protobuf:"bytes,5,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	FirstName              string                  `protobuf:"bytes,6,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName               string                  `protobuf:"bytes,7,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Member                 bool                    `protobuf:"varint,8,opt,name=member,proto3" json:"member,omitempty"`
	Avatar                 []byte                  `protobuf:"bytes,9,opt,name=avatar,proto3" json:"avatar,omitempty"`
	NewsletterNotification bool                    `protobuf:"varint,10,opt,name=newsletter_notification,json=newsletterNotification,proto3" json:"newsletter_notification,omitempty"`
	FavoriteTracks         []string                `protobuf:"bytes,11,rep,name=favorite_tracks,json=favoriteTracks,proto3" json:"favorite_tracks,omitempty"`
	FollowedGroups         []string                `protobuf:"bytes,12,rep,name=followed_groups,json=followedGroups,proto3" json:"followed_groups,omitempty"`
	OwnerOfGroups          []*tag.RelatedUserGroup `protobuf:"bytes,13,rep,name=owner_of_groups,json=ownerOfGroups,proto3" json:"owner_of_groups,omitempty"`
	ResidenceAddress       *StreetAddress          `protobuf:"bytes,14,opt,name=residence_address,json=residenceAddress,proto3" json:"residence_address,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_e439a1d3358ac578, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *User) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetMember() bool {
	if m != nil {
		return m.Member
	}
	return false
}

func (m *User) GetAvatar() []byte {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *User) GetNewsletterNotification() bool {
	if m != nil {
		return m.NewsletterNotification
	}
	return false
}

func (m *User) GetFavoriteTracks() []string {
	if m != nil {
		return m.FavoriteTracks
	}
	return nil
}

func (m *User) GetFollowedGroups() []string {
	if m != nil {
		return m.FollowedGroups
	}
	return nil
}

func (m *User) GetOwnerOfGroups() []*tag.RelatedUserGroup {
	if m != nil {
		return m.OwnerOfGroups
	}
	return nil
}

func (m *User) GetResidenceAddress() *StreetAddress {
	if m != nil {
		return m.ResidenceAddress
	}
	return nil
}

type Playlists struct {
	Playlists            []*tag.RelatedTrackGroup `protobuf:"bytes,1,rep,name=playlists,proto3" json:"playlists,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Playlists) Reset()         { *m = Playlists{} }
func (m *Playlists) String() string { return proto.CompactTextString(m) }
func (*Playlists) ProtoMessage()    {}
func (*Playlists) Descriptor() ([]byte, []int) {
	return fileDescriptor_e439a1d3358ac578, []int{1}
}

func (m *Playlists) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Playlists.Unmarshal(m, b)
}
func (m *Playlists) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Playlists.Marshal(b, m, deterministic)
}
func (m *Playlists) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Playlists.Merge(m, src)
}
func (m *Playlists) XXX_Size() int {
	return xxx_messageInfo_Playlists.Size(m)
}
func (m *Playlists) XXX_DiscardUnknown() {
	xxx_messageInfo_Playlists.DiscardUnknown(m)
}

var xxx_messageInfo_Playlists proto.InternalMessageInfo

func (m *Playlists) GetPlaylists() []*tag.RelatedTrackGroup {
	if m != nil {
		return m.Playlists
	}
	return nil
}

type Tracks struct {
	Tracks               []*track.Track `protobuf:"bytes,1,rep,name=tracks,proto3" json:"tracks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Tracks) Reset()         { *m = Tracks{} }
func (m *Tracks) String() string { return proto.CompactTextString(m) }
func (*Tracks) ProtoMessage()    {}
func (*Tracks) Descriptor() ([]byte, []int) {
	return fileDescriptor_e439a1d3358ac578, []int{2}
}

func (m *Tracks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tracks.Unmarshal(m, b)
}
func (m *Tracks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tracks.Marshal(b, m, deterministic)
}
func (m *Tracks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tracks.Merge(m, src)
}
func (m *Tracks) XXX_Size() int {
	return xxx_messageInfo_Tracks.Size(m)
}
func (m *Tracks) XXX_DiscardUnknown() {
	xxx_messageInfo_Tracks.DiscardUnknown(m)
}

var xxx_messageInfo_Tracks proto.InternalMessageInfo

func (m *Tracks) GetTracks() []*track.Track {
	if m != nil {
		return m.Tracks
	}
	return nil
}

type StreetAddress struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data                 map[string]string `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PersonalData         bool              `protobuf:"varint,3,opt,name=personal_data,json=personalData,proto3" json:"personal_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StreetAddress) Reset()         { *m = StreetAddress{} }
func (m *StreetAddress) String() string { return proto.CompactTextString(m) }
func (*StreetAddress) ProtoMessage()    {}
func (*StreetAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_e439a1d3358ac578, []int{3}
}

func (m *StreetAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreetAddress.Unmarshal(m, b)
}
func (m *StreetAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreetAddress.Marshal(b, m, deterministic)
}
func (m *StreetAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreetAddress.Merge(m, src)
}
func (m *StreetAddress) XXX_Size() int {
	return xxx_messageInfo_StreetAddress.Size(m)
}
func (m *StreetAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_StreetAddress.DiscardUnknown(m)
}

var xxx_messageInfo_StreetAddress proto.InternalMessageInfo

func (m *StreetAddress) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StreetAddress) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *StreetAddress) GetPersonalData() bool {
	if m != nil {
		return m.PersonalData
	}
	return false
}

type Artists struct {
	Artists              []*tag.RelatedUserGroup `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Artists) Reset()         { *m = Artists{} }
func (m *Artists) String() string { return proto.CompactTextString(m) }
func (*Artists) ProtoMessage()    {}
func (*Artists) Descriptor() ([]byte, []int) {
	return fileDescriptor_e439a1d3358ac578, []int{4}
}

func (m *Artists) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artists.Unmarshal(m, b)
}
func (m *Artists) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artists.Marshal(b, m, deterministic)
}
func (m *Artists) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artists.Merge(m, src)
}
func (m *Artists) XXX_Size() int {
	return xxx_messageInfo_Artists.Size(m)
}
func (m *Artists) XXX_DiscardUnknown() {
	xxx_messageInfo_Artists.DiscardUnknown(m)
}

var xxx_messageInfo_Artists proto.InternalMessageInfo

func (m *Artists) GetArtists() []*tag.RelatedUserGroup {
	if m != nil {
		return m.Artists
	}
	return nil
}

// Used for:
// - following/unfollowing group
type UserToUserGroup struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserGroupId          string   `protobuf:"bytes,2,opt,name=user_group_id,json=userGroupId,proto3" json:"user_group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserToUserGroup) Reset()         { *m = UserToUserGroup{} }
func (m *UserToUserGroup) String() string { return proto.CompactTextString(m) }
func (*UserToUserGroup) ProtoMessage()    {}
func (*UserToUserGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_e439a1d3358ac578, []int{5}
}

func (m *UserToUserGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserToUserGroup.Unmarshal(m, b)
}
func (m *UserToUserGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserToUserGroup.Marshal(b, m, deterministic)
}
func (m *UserToUserGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserToUserGroup.Merge(m, src)
}
func (m *UserToUserGroup) XXX_Size() int {
	return xxx_messageInfo_UserToUserGroup.Size(m)
}
func (m *UserToUserGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_UserToUserGroup.DiscardUnknown(m)
}

var xxx_messageInfo_UserToUserGroup proto.InternalMessageInfo

func (m *UserToUserGroup) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserToUserGroup) GetUserGroupId() string {
	if m != nil {
		return m.UserGroupId
	}
	return ""
}

// Used for:
// - adding/removing favorite tracks
type UserToTrack struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TrackId              string   `protobuf:"bytes,2,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserToTrack) Reset()         { *m = UserToTrack{} }
func (m *UserToTrack) String() string { return proto.CompactTextString(m) }
func (*UserToTrack) ProtoMessage()    {}
func (*UserToTrack) Descriptor() ([]byte, []int) {
	return fileDescriptor_e439a1d3358ac578, []int{6}
}

func (m *UserToTrack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserToTrack.Unmarshal(m, b)
}
func (m *UserToTrack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserToTrack.Marshal(b, m, deterministic)
}
func (m *UserToTrack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserToTrack.Merge(m, src)
}
func (m *UserToTrack) XXX_Size() int {
	return xxx_messageInfo_UserToTrack.Size(m)
}
func (m *UserToTrack) XXX_DiscardUnknown() {
	xxx_messageInfo_UserToTrack.DiscardUnknown(m)
}

var xxx_messageInfo_UserToTrack proto.InternalMessageInfo

func (m *UserToTrack) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserToTrack) GetTrackId() string {
	if m != nil {
		return m.TrackId
	}
	return ""
}

// Used for:
// - adding a track play (i.e. track has been streamed >=45s)
type Play struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TrackId              string   `protobuf:"bytes,2,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Credits              float32  `protobuf:"fixed32,4,opt,name=credits,proto3" json:"credits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Play) Reset()         { *m = Play{} }
func (m *Play) String() string { return proto.CompactTextString(m) }
func (*Play) ProtoMessage()    {}
func (*Play) Descriptor() ([]byte, []int) {
	return fileDescriptor_e439a1d3358ac578, []int{7}
}

func (m *Play) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Play.Unmarshal(m, b)
}
func (m *Play) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Play.Marshal(b, m, deterministic)
}
func (m *Play) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Play.Merge(m, src)
}
func (m *Play) XXX_Size() int {
	return xxx_messageInfo_Play.Size(m)
}
func (m *Play) XXX_DiscardUnknown() {
	xxx_messageInfo_Play.DiscardUnknown(m)
}

var xxx_messageInfo_Play proto.InternalMessageInfo

func (m *Play) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Play) GetTrackId() string {
	if m != nil {
		return m.TrackId
	}
	return ""
}

func (m *Play) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Play) GetCredits() float32 {
	if m != nil {
		return m.Credits
	}
	return 0
}

type CreatePlayRequest struct {
	Play                 *Play    `protobuf:"bytes,1,opt,name=play,proto3" json:"play,omitempty"`
	UpdatedCredits       float32  `protobuf:"fixed32,2,opt,name=updated_credits,json=updatedCredits,proto3" json:"updated_credits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePlayRequest) Reset()         { *m = CreatePlayRequest{} }
func (m *CreatePlayRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePlayRequest) ProtoMessage()    {}
func (*CreatePlayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e439a1d3358ac578, []int{8}
}

func (m *CreatePlayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePlayRequest.Unmarshal(m, b)
}
func (m *CreatePlayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePlayRequest.Marshal(b, m, deterministic)
}
func (m *CreatePlayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePlayRequest.Merge(m, src)
}
func (m *CreatePlayRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePlayRequest.Size(m)
}
func (m *CreatePlayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePlayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePlayRequest proto.InternalMessageInfo

func (m *CreatePlayRequest) GetPlay() *Play {
	if m != nil {
		return m.Play
	}
	return nil
}

func (m *CreatePlayRequest) GetUpdatedCredits() float32 {
	if m != nil {
		return m.UpdatedCredits
	}
	return 0
}

type CreatePlayResponse struct {
	UpdatedPlayCount     int32    `protobuf:"varint,1,opt,name=updated_play_count,json=updatedPlayCount,proto3" json:"updated_play_count,omitempty"`
	UpdatedCredits       float32  `protobuf:"fixed32,2,opt,name=updated_credits,json=updatedCredits,proto3" json:"updated_credits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePlayResponse) Reset()         { *m = CreatePlayResponse{} }
func (m *CreatePlayResponse) String() string { return proto.CompactTextString(m) }
func (*CreatePlayResponse) ProtoMessage()    {}
func (*CreatePlayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e439a1d3358ac578, []int{9}
}

func (m *CreatePlayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePlayResponse.Unmarshal(m, b)
}
func (m *CreatePlayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePlayResponse.Marshal(b, m, deterministic)
}
func (m *CreatePlayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePlayResponse.Merge(m, src)
}
func (m *CreatePlayResponse) XXX_Size() int {
	return xxx_messageInfo_CreatePlayResponse.Size(m)
}
func (m *CreatePlayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePlayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePlayResponse proto.InternalMessageInfo

func (m *CreatePlayResponse) GetUpdatedPlayCount() int32 {
	if m != nil {
		return m.UpdatedPlayCount
	}
	return 0
}

func (m *CreatePlayResponse) GetUpdatedCredits() float32 {
	if m != nil {
		return m.UpdatedCredits
	}
	return 0
}

func init() {
	proto.RegisterType((*User)(nil), "resonate.api.user.User")
	proto.RegisterType((*Playlists)(nil), "resonate.api.user.Playlists")
	proto.RegisterType((*Tracks)(nil), "resonate.api.user.Tracks")
	proto.RegisterType((*StreetAddress)(nil), "resonate.api.user.StreetAddress")
	proto.RegisterMapType((map[string]string)(nil), "resonate.api.user.StreetAddress.DataEntry")
	proto.RegisterType((*Artists)(nil), "resonate.api.user.Artists")
	proto.RegisterType((*UserToUserGroup)(nil), "resonate.api.user.UserToUserGroup")
	proto.RegisterType((*UserToTrack)(nil), "resonate.api.user.UserToTrack")
	proto.RegisterType((*Play)(nil), "resonate.api.user.Play")
	proto.RegisterType((*CreatePlayRequest)(nil), "resonate.api.user.CreatePlayRequest")
	proto.RegisterType((*CreatePlayResponse)(nil), "resonate.api.user.CreatePlayResponse")
}

func init() { proto.RegisterFile("rpc/user/service.proto", fileDescriptor_e439a1d3358ac578) }

var fileDescriptor_e439a1d3358ac578 = []byte{
	// 853 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdb, 0x6e, 0x1b, 0x37,
	0x10, 0x85, 0x2e, 0x96, 0xac, 0x91, 0xe4, 0x0b, 0x5b, 0xd8, 0x1b, 0xb5, 0x0d, 0xd4, 0x4d, 0x81,
	0x0a, 0xbd, 0xc8, 0x85, 0xfb, 0x90, 0x22, 0x45, 0x53, 0x38, 0x8e, 0xad, 0x1a, 0x69, 0xec, 0x62,
	0x13, 0xbf, 0xf4, 0x65, 0xc1, 0x88, 0xa3, 0x94, 0xf0, 0x6a, 0x77, 0x4b, 0x52, 0x32, 0xf4, 0x2d,
	0xfd, 0x96, 0x7e, 0x47, 0x7f, 0xa7, 0xe0, 0x90, 0x2b, 0x5b, 0x88, 0xd6, 0x09, 0x8c, 0xbc, 0x18,
	0x3b, 0xe7, 0xcc, 0x39, 0x43, 0x0e, 0xc9, 0xb1, 0x60, 0x4f, 0xe5, 0xe3, 0x83, 0x99, 0x46, 0x75,
	0xa0, 0x51, 0xcd, 0xe5, 0x18, 0x87, 0xb9, 0xca, 0x4c, 0xc6, 0x76, 0x15, 0xea, 0x2c, 0xe5, 0x06,
	0x87, 0x3c, 0x97, 0x43, 0x9b, 0xd0, 0xeb, 0xdb, 0xbf, 0xdf, 0xf3, 0x5c, 0x1e, 0x58, 0x8d, 0x51,
	0x7c, 0x7c, 0xb5, 0x2a, 0xea, 0x3d, 0x5c, 0xcd, 0xe0, 0x6f, 0x57, 0xf9, 0xf0, 0x9f, 0x3a, 0xd4,
	0x2f, 0x35, 0x2a, 0xb6, 0x05, 0x55, 0x29, 0x82, 0x4a, 0xbf, 0x32, 0x68, 0x45, 0x55, 0x29, 0x58,
	0x0f, 0x36, 0xad, 0x34, 0xe5, 0x53, 0x0c, 0xaa, 0x84, 0x2e, 0x63, 0xf6, 0x29, 0x6c, 0xe0, 0x94,
	0xcb, 0x24, 0xa8, 0x11, 0xe1, 0x02, 0xf6, 0x25, 0x74, 0x84, 0xd4, 0x79, 0xc2, 0x17, 0x31, 0xa9,
	0xea, 0x44, 0xb6, 0x3d, 0x76, 0x6e, 0x85, 0x9f, 0x41, 0x6b, 0x32, 0x4b, 0x12, 0xc7, 0x6f, 0x38,
	0x57, 0x0b, 0x10, 0xf9, 0x05, 0xc0, 0x44, 0x2a, 0x6d, 0x1c, 0xdb, 0x20, 0xb6, 0x45, 0x48, 0xa1,
	0x4d, 0x78, 0xc1, 0x36, 0x9d, 0xd6, 0x02, 0x44, 0xee, 0x41, 0x63, 0x8a, 0xd3, 0x37, 0xa8, 0x82,
	0xcd, 0x7e, 0x65, 0xb0, 0x19, 0xf9, 0xc8, 0xe2, 0x7c, 0xce, 0x0d, 0x57, 0x41, 0xab, 0x5f, 0x19,
	0x74, 0x22, 0x1f, 0xb1, 0xc7, 0xb0, 0x9f, 0xe2, 0xb5, 0x4e, 0xd0, 0x18, 0x54, 0x71, 0x9a, 0x19,
	0x39, 0x91, 0x63, 0x6e, 0x64, 0x96, 0x06, 0x40, 0x06, 0x7b, 0x37, 0xf4, 0xf9, 0x2d, 0x96, 0x7d,
	0x0d, 0xdb, 0x13, 0x3e, 0xcf, 0x94, 0x34, 0x18, 0x53, 0xbf, 0x75, 0xd0, 0xee, 0xd7, 0x06, 0xad,
	0x68, 0xab, 0x80, 0x5f, 0x13, 0x4a, 0x89, 0x59, 0x92, 0x64, 0xd7, 0x28, 0xe2, 0xb7, 0x2a, 0x9b,
	0xe5, 0x3a, 0xe8, 0xf8, 0x44, 0x0f, 0x8f, 0x08, 0x65, 0x2f, 0x60, 0x3b, 0xbb, 0x4e, 0x51, 0xc5,
	0xd9, 0xa4, 0x48, 0xec, 0xf6, 0x6b, 0x83, 0xf6, 0xe1, 0xa3, 0xe1, 0x3b, 0x07, 0x3e, 0x8c, 0x30,
	0xe1, 0x06, 0x85, 0x3d, 0x31, 0x92, 0x47, 0x5d, 0xd2, 0x5e, 0x4c, 0xbc, 0xd9, 0x4b, 0xb0, 0xb7,
	0x44, 0x0a, 0x4c, 0xc7, 0x18, 0x73, 0x21, 0x14, 0x6a, 0x1d, 0x6c, 0xf5, 0x2b, 0x83, 0xf6, 0x61,
	0x7f, 0x8d, 0xdd, 0x2b, 0xa3, 0x10, 0xcd, 0x91, 0xcb, 0x8b, 0x76, 0x96, 0x52, 0x8f, 0x84, 0x17,
	0xd0, 0xfa, 0x23, 0xe1, 0x8b, 0x44, 0x6a, 0xa3, 0xd9, 0x33, 0x68, 0xe5, 0x45, 0x10, 0x54, 0x68,
	0x89, 0x5f, 0x95, 0x2f, 0x91, 0xda, 0xe0, 0xd6, 0x78, 0x23, 0x0b, 0x9f, 0x40, 0xc3, 0xf7, 0xe7,
	0x07, 0x68, 0xf8, 0xfe, 0x39, 0xab, 0x60, 0x8d, 0x15, 0xa5, 0x46, 0x3e, 0x2f, 0xfc, 0xb7, 0x02,
	0xdd, 0x95, 0x05, 0xbf, 0x73, 0x67, 0x9f, 0x42, 0x5d, 0x70, 0xc3, 0x83, 0x2a, 0x39, 0x7e, 0xf3,
	0xbe, 0x0d, 0x0f, 0x9f, 0x73, 0xc3, 0x4f, 0x52, 0xa3, 0x16, 0x11, 0xe9, 0xd8, 0x23, 0xe8, 0xe6,
	0xa8, 0xac, 0x26, 0x89, 0xc9, 0xa8, 0x46, 0x77, 0xa1, 0x53, 0x80, 0x36, 0xbf, 0xf7, 0x18, 0x5a,
	0x4b, 0x1d, 0xdb, 0x81, 0xda, 0x15, 0x2e, 0xfc, 0x12, 0xec, 0xa7, 0x7d, 0x1b, 0x73, 0x9e, 0xcc,
	0x8a, 0x47, 0xe3, 0x82, 0x27, 0xd5, 0x9f, 0x2a, 0xe1, 0x6f, 0xd0, 0x3c, 0x52, 0x86, 0x5a, 0xf9,
	0x0b, 0x34, 0xb9, 0xfb, 0xf4, 0xbb, 0xff, 0xa0, 0xb3, 0x2e, 0x34, 0xe1, 0x39, 0x6c, 0x5b, 0xf4,
	0x75, 0xb6, 0xe4, 0xd8, 0x3e, 0x34, 0xad, 0x28, 0x5e, 0xf6, 0xa3, 0x61, 0xc3, 0x33, 0xc1, 0x42,
	0xe8, 0x12, 0x41, 0x57, 0xcb, 0xd2, 0x6e, 0x5d, 0xed, 0x59, 0x21, 0x3d, 0x13, 0xe1, 0x11, 0xb4,
	0x9d, 0x1f, 0x35, 0xbc, 0xdc, 0xeb, 0x01, 0x6c, 0xd2, 0x59, 0xdc, 0xd8, 0x34, 0x29, 0x3e, 0x13,
	0xe1, 0x5f, 0x50, 0xb7, 0x37, 0xe5, 0x3e, 0x5a, 0xc6, 0xa0, 0x6e, 0x16, 0x39, 0xfa, 0x69, 0x42,
	0xdf, 0x2c, 0x80, 0xe6, 0x58, 0xa1, 0x90, 0x46, 0xd3, 0x1c, 0xa9, 0x46, 0x45, 0x18, 0x4a, 0xd8,
	0x3d, 0x56, 0xc8, 0x0d, 0xda, 0x7a, 0x11, 0xfe, 0x3d, 0x43, 0x6d, 0xd8, 0xb7, 0x50, 0xb7, 0x97,
	0x8c, 0x6a, 0xb6, 0x0f, 0xf7, 0xd7, 0x74, 0x93, 0xb2, 0x29, 0xc9, 0x3e, 0xcd, 0x59, 0x2e, 0x6c,
	0x6f, 0xe3, 0xa2, 0x46, 0x95, 0x6a, 0x6c, 0x79, 0xf8, 0xd8, 0x97, 0xba, 0x02, 0x76, 0xbb, 0x94,
	0xce, 0xb3, 0x54, 0x23, 0xfb, 0x0e, 0x58, 0x21, 0xa7, 0x61, 0x37, 0xce, 0x66, 0xa9, 0xa1, 0xca,
	0x1b, 0xd1, 0x8e, 0x67, 0xac, 0xe0, 0xd8, 0xe2, 0x1f, 0x5c, 0xec, 0xf0, 0xbf, 0x0d, 0x77, 0x0a,
	0xaf, 0xdc, 0x7c, 0x66, 0x4f, 0x01, 0x5c, 0x71, 0x1a, 0xcf, 0xeb, 0xb6, 0x64, 0x89, 0x5e, 0x19,
	0xc1, 0x7e, 0x86, 0xe6, 0x08, 0xcd, 0x3d, 0xc5, 0xbf, 0x02, 0x5c, 0xd2, 0xf2, 0xee, 0xd6, 0xaf,
	0x7b, 0xb4, 0x27, 0xd3, 0xdc, 0x2c, 0xac, 0xc1, 0x73, 0x4c, 0xf0, 0xfe, 0x06, 0x2f, 0xa0, 0x7d,
	0x4a, 0x83, 0xd2, 0xdd, 0xef, 0xb0, 0xc4, 0xe1, 0xd6, 0x1b, 0xb8, 0xc3, 0xec, 0x25, 0x74, 0x2f,
	0xd3, 0xc9, 0x47, 0xb3, 0xfb, 0x1d, 0x76, 0x8e, 0x84, 0x38, 0xbd, 0x3d, 0xf0, 0xd9, 0xc3, 0x52,
	0x47, 0xe2, 0xef, 0x70, 0xbb, 0x80, 0x4f, 0x22, 0x9c, 0x66, 0x73, 0xfc, 0x58, 0x86, 0x27, 0xd0,
	0x19, 0xa1, 0xb9, 0x19, 0xdc, 0xa5, 0xdd, 0xff, 0xbc, 0xe4, 0x9d, 0x38, 0xd9, 0x08, 0x76, 0x47,
	0x68, 0x4e, 0x57, 0xff, 0xad, 0x95, 0x7a, 0x3d, 0x28, 0x9b, 0xdf, 0xfa, 0x59, 0xe3, 0xcf, 0xba,
	0x0d, 0xdf, 0x34, 0xe8, 0x27, 0xc7, 0x8f, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0x99, 0x6a, 0x40,
	0x73, 0xe1, 0x08, 0x00, 0x00,
}
