// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/user/service.proto

package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import track "user-api/rpc/track"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	Id                     string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Username               string               `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Email                  string               `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	DisplayName            string               `protobuf:"bytes,4,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	FullName               string               `protobuf:"bytes,5,opt,name=full_name,json=fullName" json:"full_name,omitempty"`
	FirstName              string               `protobuf:"bytes,6,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName               string               `protobuf:"bytes,7,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Member                 bool                 `protobuf:"varint,8,opt,name=member" json:"member,omitempty"`
	Avatar                 []byte               `protobuf:"bytes,9,opt,name=avatar,proto3" json:"avatar,omitempty"`
	NewsletterNotification bool                 `protobuf:"varint,10,opt,name=newsletter_notification,json=newsletterNotification" json:"newsletter_notification,omitempty"`
	FavoriteTracks         []string             `protobuf:"bytes,11,rep,name=favorite_tracks,json=favoriteTracks" json:"favorite_tracks,omitempty"`
	FollowedGroups         []string             `protobuf:"bytes,12,rep,name=followed_groups,json=followedGroups" json:"followed_groups,omitempty"`
	OwnerOfGroups          []*UserGroupResponse `protobuf:"bytes,13,rep,name=owner_of_groups,json=ownerOfGroups" json:"owner_of_groups,omitempty"`
	ResidenceAddress       *StreetAddress       `protobuf:"bytes,14,opt,name=residence_address,json=residenceAddress" json:"residence_address,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}             `json:"-"`
	XXX_unrecognized       []byte               `json:"-"`
	XXX_sizecache          int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_bced0ac1df1dbde2, []int{0}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *User) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetMember() bool {
	if m != nil {
		return m.Member
	}
	return false
}

func (m *User) GetAvatar() []byte {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *User) GetNewsletterNotification() bool {
	if m != nil {
		return m.NewsletterNotification
	}
	return false
}

func (m *User) GetFavoriteTracks() []string {
	if m != nil {
		return m.FavoriteTracks
	}
	return nil
}

func (m *User) GetFollowedGroups() []string {
	if m != nil {
		return m.FollowedGroups
	}
	return nil
}

func (m *User) GetOwnerOfGroups() []*UserGroupResponse {
	if m != nil {
		return m.OwnerOfGroups
	}
	return nil
}

func (m *User) GetResidenceAddress() *StreetAddress {
	if m != nil {
		return m.ResidenceAddress
	}
	return nil
}

type Playlists struct {
	Playlists            []*track.RelatedTrackGroup `protobuf:"bytes,1,rep,name=playlists" json:"playlists,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Playlists) Reset()         { *m = Playlists{} }
func (m *Playlists) String() string { return proto.CompactTextString(m) }
func (*Playlists) ProtoMessage()    {}
func (*Playlists) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_bced0ac1df1dbde2, []int{1}
}
func (m *Playlists) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Playlists.Unmarshal(m, b)
}
func (m *Playlists) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Playlists.Marshal(b, m, deterministic)
}
func (dst *Playlists) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Playlists.Merge(dst, src)
}
func (m *Playlists) XXX_Size() int {
	return xxx_messageInfo_Playlists.Size(m)
}
func (m *Playlists) XXX_DiscardUnknown() {
	xxx_messageInfo_Playlists.DiscardUnknown(m)
}

var xxx_messageInfo_Playlists proto.InternalMessageInfo

func (m *Playlists) GetPlaylists() []*track.RelatedTrackGroup {
	if m != nil {
		return m.Playlists
	}
	return nil
}

type FavoriteTracks struct {
	FavoriteTracks       []*track.Track `protobuf:"bytes,1,rep,name=favorite_tracks,json=favoriteTracks" json:"favorite_tracks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *FavoriteTracks) Reset()         { *m = FavoriteTracks{} }
func (m *FavoriteTracks) String() string { return proto.CompactTextString(m) }
func (*FavoriteTracks) ProtoMessage()    {}
func (*FavoriteTracks) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_bced0ac1df1dbde2, []int{2}
}
func (m *FavoriteTracks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FavoriteTracks.Unmarshal(m, b)
}
func (m *FavoriteTracks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FavoriteTracks.Marshal(b, m, deterministic)
}
func (dst *FavoriteTracks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FavoriteTracks.Merge(dst, src)
}
func (m *FavoriteTracks) XXX_Size() int {
	return xxx_messageInfo_FavoriteTracks.Size(m)
}
func (m *FavoriteTracks) XXX_DiscardUnknown() {
	xxx_messageInfo_FavoriteTracks.DiscardUnknown(m)
}

var xxx_messageInfo_FavoriteTracks proto.InternalMessageInfo

func (m *FavoriteTracks) GetFavoriteTracks() []*track.Track {
	if m != nil {
		return m.FavoriteTracks
	}
	return nil
}

type StreetAddress struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Data                 map[string]string `protobuf:"bytes,2,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PersonalData         bool              `protobuf:"varint,3,opt,name=personal_data,json=personalData" json:"personal_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StreetAddress) Reset()         { *m = StreetAddress{} }
func (m *StreetAddress) String() string { return proto.CompactTextString(m) }
func (*StreetAddress) ProtoMessage()    {}
func (*StreetAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_bced0ac1df1dbde2, []int{3}
}
func (m *StreetAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreetAddress.Unmarshal(m, b)
}
func (m *StreetAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreetAddress.Marshal(b, m, deterministic)
}
func (dst *StreetAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreetAddress.Merge(dst, src)
}
func (m *StreetAddress) XXX_Size() int {
	return xxx_messageInfo_StreetAddress.Size(m)
}
func (m *StreetAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_StreetAddress.DiscardUnknown(m)
}

var xxx_messageInfo_StreetAddress proto.InternalMessageInfo

func (m *StreetAddress) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StreetAddress) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *StreetAddress) GetPersonalData() bool {
	if m != nil {
		return m.PersonalData
	}
	return false
}

type UserGroupResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	DisplayName          string   `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Avatar               []byte   `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserGroupResponse) Reset()         { *m = UserGroupResponse{} }
func (m *UserGroupResponse) String() string { return proto.CompactTextString(m) }
func (*UserGroupResponse) ProtoMessage()    {}
func (*UserGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_bced0ac1df1dbde2, []int{4}
}
func (m *UserGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserGroupResponse.Unmarshal(m, b)
}
func (m *UserGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserGroupResponse.Marshal(b, m, deterministic)
}
func (dst *UserGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserGroupResponse.Merge(dst, src)
}
func (m *UserGroupResponse) XXX_Size() int {
	return xxx_messageInfo_UserGroupResponse.Size(m)
}
func (m *UserGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserGroupResponse proto.InternalMessageInfo

func (m *UserGroupResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserGroupResponse) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *UserGroupResponse) GetAvatar() []byte {
	if m != nil {
		return m.Avatar
	}
	return nil
}

// Used for:
// - connecting to user group
// - follow/unfollow group
type UserToUserGroup struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	UserGroupId          string   `protobuf:"bytes,2,opt,name=user_group_id,json=userGroupId" json:"user_group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserToUserGroup) Reset()         { *m = UserToUserGroup{} }
func (m *UserToUserGroup) String() string { return proto.CompactTextString(m) }
func (*UserToUserGroup) ProtoMessage()    {}
func (*UserToUserGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_bced0ac1df1dbde2, []int{5}
}
func (m *UserToUserGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserToUserGroup.Unmarshal(m, b)
}
func (m *UserToUserGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserToUserGroup.Marshal(b, m, deterministic)
}
func (dst *UserToUserGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserToUserGroup.Merge(dst, src)
}
func (m *UserToUserGroup) XXX_Size() int {
	return xxx_messageInfo_UserToUserGroup.Size(m)
}
func (m *UserToUserGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_UserToUserGroup.DiscardUnknown(m)
}

var xxx_messageInfo_UserToUserGroup proto.InternalMessageInfo

func (m *UserToUserGroup) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserToUserGroup) GetUserGroupId() string {
	if m != nil {
		return m.UserGroupId
	}
	return ""
}

// Used for:
// - add/remove favorite tracks
type UserToTrack struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	TrackId              string   `protobuf:"bytes,2,opt,name=track_id,json=trackId" json:"track_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserToTrack) Reset()         { *m = UserToTrack{} }
func (m *UserToTrack) String() string { return proto.CompactTextString(m) }
func (*UserToTrack) ProtoMessage()    {}
func (*UserToTrack) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_bced0ac1df1dbde2, []int{6}
}
func (m *UserToTrack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserToTrack.Unmarshal(m, b)
}
func (m *UserToTrack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserToTrack.Marshal(b, m, deterministic)
}
func (dst *UserToTrack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserToTrack.Merge(dst, src)
}
func (m *UserToTrack) XXX_Size() int {
	return xxx_messageInfo_UserToTrack.Size(m)
}
func (m *UserToTrack) XXX_DiscardUnknown() {
	xxx_messageInfo_UserToTrack.DiscardUnknown(m)
}

var xxx_messageInfo_UserToTrack proto.InternalMessageInfo

func (m *UserToTrack) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserToTrack) GetTrackId() string {
	if m != nil {
		return m.TrackId
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "resonate.api.user.User")
	proto.RegisterType((*Playlists)(nil), "resonate.api.user.Playlists")
	proto.RegisterType((*FavoriteTracks)(nil), "resonate.api.user.FavoriteTracks")
	proto.RegisterType((*StreetAddress)(nil), "resonate.api.user.StreetAddress")
	proto.RegisterMapType((map[string]string)(nil), "resonate.api.user.StreetAddress.DataEntry")
	proto.RegisterType((*UserGroupResponse)(nil), "resonate.api.user.UserGroupResponse")
	proto.RegisterType((*UserToUserGroup)(nil), "resonate.api.user.UserToUserGroup")
	proto.RegisterType((*UserToTrack)(nil), "resonate.api.user.UserToTrack")
}

func init() { proto.RegisterFile("rpc/user/service.proto", fileDescriptor_service_bced0ac1df1dbde2) }

var fileDescriptor_service_bced0ac1df1dbde2 = []byte{
	// 737 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdd, 0x4e, 0xdb, 0x4a,
	0x10, 0x96, 0x93, 0x90, 0xc4, 0x93, 0x1f, 0x60, 0xcf, 0x11, 0xf8, 0xe4, 0xfc, 0xc8, 0xf8, 0x1c,
	0xe9, 0x44, 0x95, 0x1a, 0x24, 0x7a, 0x41, 0xd5, 0x4a, 0x54, 0xa1, 0x40, 0x84, 0x0a, 0xa4, 0x32,
	0x70, 0xd3, 0x8b, 0x5a, 0x4b, 0x3c, 0xa9, 0x2c, 0x1c, 0xdb, 0x5a, 0x6f, 0x82, 0xf2, 0x2e, 0x7d,
	0x95, 0x3e, 0x4b, 0x5f, 0xa5, 0xda, 0xb1, 0x9d, 0x10, 0x12, 0x83, 0x84, 0xb8, 0x89, 0x32, 0xdf,
	0x37, 0xdf, 0xb7, 0xbb, 0x33, 0xb3, 0x6b, 0xd8, 0x12, 0xd1, 0x60, 0x77, 0x1c, 0xa3, 0xd8, 0x8d,
	0x51, 0x4c, 0xbc, 0x01, 0x76, 0x22, 0x11, 0xca, 0x90, 0x6d, 0x0a, 0x8c, 0xc3, 0x80, 0x4b, 0xec,
	0xf0, 0xc8, 0xeb, 0xa8, 0x84, 0x96, 0xa9, 0x7e, 0x5f, 0xf3, 0xc8, 0xdb, 0x55, 0x1a, 0x29, 0xf8,
	0xe0, 0x76, 0x51, 0x64, 0x7d, 0x2f, 0x41, 0xe9, 0x3a, 0x46, 0xc1, 0x9a, 0x50, 0xf0, 0x5c, 0x43,
	0x33, 0xb5, 0xb6, 0x6e, 0x17, 0x3c, 0x97, 0xb5, 0xa0, 0xaa, 0xc4, 0x01, 0x1f, 0xa1, 0x51, 0x20,
	0x74, 0x16, 0xb3, 0xdf, 0x61, 0x0d, 0x47, 0xdc, 0xf3, 0x8d, 0x22, 0x11, 0x49, 0xc0, 0x76, 0xa0,
	0xee, 0x7a, 0x71, 0xe4, 0xf3, 0xa9, 0x43, 0xaa, 0x12, 0x91, 0xb5, 0x14, 0xbb, 0x50, 0xc2, 0x3f,
	0x41, 0x1f, 0x8e, 0x7d, 0x3f, 0xe1, 0xd7, 0x12, 0x57, 0x05, 0x10, 0xf9, 0x37, 0xc0, 0xd0, 0x13,
	0xb1, 0x4c, 0xd8, 0x32, 0xb1, 0x3a, 0x21, 0x99, 0xd6, 0xe7, 0x19, 0x5b, 0x49, 0xb4, 0x0a, 0x20,
	0x72, 0x0b, 0xca, 0x23, 0x1c, 0xdd, 0xa0, 0x30, 0xaa, 0xa6, 0xd6, 0xae, 0xda, 0x69, 0xa4, 0x70,
	0x3e, 0xe1, 0x92, 0x0b, 0x43, 0x37, 0xb5, 0x76, 0xdd, 0x4e, 0x23, 0xb6, 0x0f, 0xdb, 0x01, 0xde,
	0xc5, 0x3e, 0x4a, 0x89, 0xc2, 0x09, 0x42, 0xe9, 0x0d, 0xbd, 0x01, 0x97, 0x5e, 0x18, 0x18, 0x40,
	0x06, 0x5b, 0x73, 0xfa, 0xe2, 0x1e, 0xcb, 0xfe, 0x87, 0xf5, 0x21, 0x9f, 0x84, 0xc2, 0x93, 0xe8,
	0x50, 0x3d, 0x63, 0xa3, 0x66, 0x16, 0xdb, 0xba, 0xdd, 0xcc, 0xe0, 0x2b, 0x42, 0x29, 0x31, 0xf4,
	0xfd, 0xf0, 0x0e, 0x5d, 0xe7, 0x9b, 0x08, 0xc7, 0x51, 0x6c, 0xd4, 0xd3, 0xc4, 0x14, 0xee, 0x11,
	0xca, 0xce, 0x60, 0x3d, 0xbc, 0x0b, 0x50, 0x38, 0xe1, 0x30, 0x4b, 0x6c, 0x98, 0xc5, 0x76, 0x6d,
	0xef, 0xbf, 0xce, 0x52, 0x43, 0x3b, 0xaa, 0x55, 0xa4, 0xb3, 0x31, 0x8e, 0xc2, 0x20, 0x46, 0xbb,
	0x41, 0xe2, 0xfe, 0x30, 0x75, 0x3b, 0x07, 0x35, 0x06, 0x9e, 0x8b, 0xc1, 0x00, 0x1d, 0xee, 0xba,
	0x02, 0xe3, 0xd8, 0x68, 0x9a, 0x5a, 0xbb, 0xb6, 0x67, 0xae, 0xf0, 0xbb, 0x94, 0x02, 0x51, 0x76,
	0x93, 0x3c, 0x7b, 0x63, 0x26, 0x4d, 0x11, 0xab, 0x0f, 0xfa, 0x67, 0x9f, 0x4f, 0x7d, 0x2f, 0x96,
	0x31, 0x3b, 0x04, 0x3d, 0xca, 0x02, 0x43, 0xcb, 0xdd, 0xa3, 0x8d, 0x3e, 0x97, 0xe8, 0x52, 0x1d,
	0x92, 0xbd, 0xce, 0x65, 0xd6, 0x25, 0x34, 0x4f, 0x16, 0x0b, 0xd5, 0x5d, 0xae, 0x68, 0xe2, 0x6d,
	0xac, 0xf0, 0x26, 0xcd, 0xc3, 0x5a, 0x5b, 0x3f, 0x34, 0x68, 0x2c, 0x9c, 0x64, 0x69, 0x9a, 0x0f,
	0xa0, 0xe4, 0x72, 0xc9, 0x8d, 0x02, 0x39, 0xbf, 0x7a, 0xaa, 0x12, 0x9d, 0x23, 0x2e, 0xf9, 0x71,
	0x20, 0xc5, 0xd4, 0x26, 0x1d, 0xfb, 0x17, 0x1a, 0x11, 0x0a, 0xa5, 0xf1, 0x1d, 0x32, 0x2a, 0xd2,
	0x94, 0xd4, 0x33, 0x50, 0xe5, 0xb7, 0xf6, 0x41, 0x9f, 0xe9, 0xd8, 0x06, 0x14, 0x6f, 0x71, 0x9a,
	0x6e, 0x41, 0xfd, 0x55, 0xb7, 0x66, 0xc2, 0xfd, 0x71, 0x76, 0x9d, 0x92, 0xe0, 0x5d, 0xe1, 0xad,
	0x66, 0x7d, 0x85, 0xcd, 0xa5, 0xc6, 0x2e, 0x1d, 0xe1, 0xe1, 0xf5, 0x2a, 0x2c, 0x5f, 0xaf, 0xf9,
	0xb4, 0x17, 0xef, 0x4f, 0xbb, 0x75, 0x01, 0xeb, 0xca, 0xff, 0x2a, 0x9c, 0xad, 0xc2, 0xb6, 0xa1,
	0xa2, 0x8e, 0xed, 0xcc, 0x96, 0x28, 0xab, 0xf0, 0xd4, 0x65, 0x16, 0x34, 0x88, 0xa0, 0x51, 0x54,
	0x74, 0xba, 0xce, 0x38, 0x93, 0x9e, 0xba, 0x56, 0x17, 0x6a, 0x89, 0x1f, 0xd5, 0x3f, 0xdf, 0xeb,
	0x0f, 0xa8, 0x52, 0x47, 0xe7, 0x36, 0x15, 0x8a, 0x4f, 0xdd, 0xbd, 0x9f, 0x6b, 0x89, 0xc7, 0x65,
	0xf2, 0x1a, 0xb1, 0x03, 0x80, 0x8f, 0x02, 0xb9, 0x44, 0x7a, 0x8c, 0xb6, 0x73, 0x46, 0xbf, 0x95,
	0x47, 0xb0, 0xf7, 0x50, 0xe9, 0xa1, 0x7c, 0xa6, 0xf8, 0x03, 0xc0, 0x75, 0xe4, 0x3e, 0xb9, 0xf8,
	0xaa, 0x81, 0x3c, 0x1e, 0x45, 0x72, 0xaa, 0x0c, 0x8e, 0xd0, 0xc7, 0xe7, 0x1b, 0x7c, 0x82, 0xda,
	0x09, 0x3d, 0x0b, 0x49, 0x77, 0xac, 0x1c, 0x87, 0x7b, 0x1d, 0x7c, 0xc4, 0xec, 0x1c, 0x1a, 0xd7,
	0xc1, 0xf0, 0xc5, 0xec, 0xce, 0x60, 0xa3, 0xeb, 0xba, 0x0b, 0xb7, 0x96, 0xfd, 0x93, 0xeb, 0x48,
	0xfc, 0x23, 0x6e, 0x7d, 0xf8, 0xcd, 0xc6, 0x51, 0x38, 0xc1, 0x97, 0x32, 0x3c, 0x86, 0x7a, 0x0f,
	0xe5, 0xfc, 0x95, 0xca, 0xad, 0xfe, 0x5f, 0x2b, 0x88, 0xb9, 0xac, 0x0f, 0x9b, 0x3d, 0x94, 0x0f,
	0xde, 0xa6, 0x5c, 0xaf, 0x9d, 0x15, 0xc4, 0xa2, 0xf6, 0xb0, 0xfc, 0xa5, 0xa4, 0xe0, 0x9b, 0x32,
	0x7d, 0x68, 0xdf, 0xfc, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x24, 0x5a, 0x16, 0x78, 0xb7, 0x07, 0x00,
	0x00,
}
