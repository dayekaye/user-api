// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/trackgroup/service.proto

/*
Package trackgroup is a generated protocol buffer package.

It is generated from these files:
	rpc/trackgroup/service.proto

It has these top-level messages:
	TrackGroup
	TracksToTrackGroup
*/
package trackgroup

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"
import resonate_api_user1 "user-api/rpc/track"
import resonate_api_user "user-api/rpc/tag"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TrackGroup struct {
	Id                string                              `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title             string                              `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Cover             []byte                              `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	ReleaseDate       *google_protobuf.Timestamp          `protobuf:"bytes,4,opt,name=release_date,json=releaseDate" json:"release_date,omitempty"`
	Type              string                              `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	DisplayArtist     string                              `protobuf:"bytes,6,opt,name=display_artist,json=displayArtist" json:"display_artist,omitempty"`
	MultipleComposers bool                                `protobuf:"varint,7,opt,name=multiple_composers,json=multipleComposers" json:"multiple_composers,omitempty"`
	Private           bool                                `protobuf:"varint,8,opt,name=private" json:"private,omitempty"`
	CreatorId         string                              `protobuf:"bytes,9,opt,name=creator_id,json=creatorId" json:"creator_id,omitempty"`
	UserGroupId       string                              `protobuf:"bytes,10,opt,name=user_group_id,json=userGroupId" json:"user_group_id,omitempty"`
	UserGroup         *resonate_api_user.RelatedUserGroup `protobuf:"bytes,11,opt,name=UserGroup" json:"UserGroup,omitempty"`
	LabelId           string                              `protobuf:"bytes,12,opt,name=label_id,json=labelId" json:"label_id,omitempty"`
	Label             *resonate_api_user.RelatedUserGroup `protobuf:"bytes,13,opt,name=Label" json:"Label,omitempty"`
	Tracks            []*resonate_api_user1.Track         `protobuf:"bytes,14,rep,name=tracks" json:"tracks,omitempty"`
	Tags              []*resonate_api_user.Tag            `protobuf:"bytes,15,rep,name=tags" json:"tags,omitempty"`
	About             string                              `protobuf:"bytes,16,opt,name=about" json:"about,omitempty"`
}

func (m *TrackGroup) Reset()                    { *m = TrackGroup{} }
func (m *TrackGroup) String() string            { return proto.CompactTextString(m) }
func (*TrackGroup) ProtoMessage()               {}
func (*TrackGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TrackGroup) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TrackGroup) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TrackGroup) GetCover() []byte {
	if m != nil {
		return m.Cover
	}
	return nil
}

func (m *TrackGroup) GetReleaseDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.ReleaseDate
	}
	return nil
}

func (m *TrackGroup) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TrackGroup) GetDisplayArtist() string {
	if m != nil {
		return m.DisplayArtist
	}
	return ""
}

func (m *TrackGroup) GetMultipleComposers() bool {
	if m != nil {
		return m.MultipleComposers
	}
	return false
}

func (m *TrackGroup) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

func (m *TrackGroup) GetCreatorId() string {
	if m != nil {
		return m.CreatorId
	}
	return ""
}

func (m *TrackGroup) GetUserGroupId() string {
	if m != nil {
		return m.UserGroupId
	}
	return ""
}

func (m *TrackGroup) GetUserGroup() *resonate_api_user.RelatedUserGroup {
	if m != nil {
		return m.UserGroup
	}
	return nil
}

func (m *TrackGroup) GetLabelId() string {
	if m != nil {
		return m.LabelId
	}
	return ""
}

func (m *TrackGroup) GetLabel() *resonate_api_user.RelatedUserGroup {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *TrackGroup) GetTracks() []*resonate_api_user1.Track {
	if m != nil {
		return m.Tracks
	}
	return nil
}

func (m *TrackGroup) GetTags() []*resonate_api_user.Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *TrackGroup) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

type TracksToTrackGroup struct {
	TrackGroupId string                      `protobuf:"bytes,1,opt,name=track_group_id,json=trackGroupId" json:"track_group_id,omitempty"`
	Tracks       []*resonate_api_user1.Track `protobuf:"bytes,2,rep,name=tracks" json:"tracks,omitempty"`
}

func (m *TracksToTrackGroup) Reset()                    { *m = TracksToTrackGroup{} }
func (m *TracksToTrackGroup) String() string            { return proto.CompactTextString(m) }
func (*TracksToTrackGroup) ProtoMessage()               {}
func (*TracksToTrackGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TracksToTrackGroup) GetTrackGroupId() string {
	if m != nil {
		return m.TrackGroupId
	}
	return ""
}

func (m *TracksToTrackGroup) GetTracks() []*resonate_api_user1.Track {
	if m != nil {
		return m.Tracks
	}
	return nil
}

func init() {
	proto.RegisterType((*TrackGroup)(nil), "resonate.api.user.TrackGroup")
	proto.RegisterType((*TracksToTrackGroup)(nil), "resonate.api.user.TracksToTrackGroup")
}

func init() { proto.RegisterFile("rpc/trackgroup/service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 587 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xdf, 0x6b, 0x13, 0x41,
	0x10, 0xc7, 0x49, 0x9a, 0xfe, 0xc8, 0xe4, 0x87, 0xcd, 0xa2, 0xb2, 0x1e, 0x56, 0x8f, 0x6a, 0x21,
	0x08, 0xbd, 0x48, 0x7d, 0xf2, 0xc1, 0x87, 0xda, 0x6a, 0x09, 0x2a, 0xea, 0xb5, 0x05, 0x11, 0x24,
	0x6c, 0x6e, 0xc7, 0xb8, 0xb8, 0xe7, 0x2e, 0xbb, 0x7b, 0x81, 0xfc, 0xa7, 0x82, 0xff, 0x8c, 0xec,
	0x5e, 0xd2, 0x34, 0x78, 0x2d, 0x15, 0xfa, 0x76, 0x33, 0xf3, 0x99, 0xef, 0xcc, 0xce, 0x0c, 0x07,
	0x0f, 0x8d, 0xce, 0x06, 0xce, 0xb0, 0xec, 0xe7, 0xc4, 0xa8, 0x42, 0x0f, 0x2c, 0x9a, 0xa9, 0xc8,
	0x30, 0xd1, 0x46, 0x39, 0x45, 0x7a, 0x06, 0xad, 0xfa, 0xc5, 0x1c, 0x26, 0x4c, 0x8b, 0xa4, 0xb0,
	0x68, 0xa2, 0xc7, 0x13, 0xa5, 0x26, 0x12, 0x07, 0x01, 0x18, 0x17, 0xdf, 0x07, 0x4e, 0xe4, 0x68,
	0x1d, 0xcb, 0x75, 0x99, 0x13, 0xc5, 0x1e, 0xdb, 0x67, 0x5a, 0x0c, 0x2e, 0xa4, 0x57, 0x55, 0xa3,
	0x47, 0xab, 0x04, 0x9b, 0xac, 0xc6, 0x77, 0xff, 0x34, 0x00, 0xce, 0x7c, 0xde, 0x89, 0x6f, 0x89,
	0x74, 0xa1, 0x2e, 0x38, 0xad, 0xc5, 0xb5, 0x7e, 0x33, 0xad, 0x0b, 0x4e, 0xee, 0xc2, 0xba, 0x13,
	0x4e, 0x22, 0xad, 0x07, 0x57, 0x69, 0x78, 0x6f, 0xa6, 0xa6, 0x68, 0xe8, 0x5a, 0x5c, 0xeb, 0xb7,
	0xd3, 0xd2, 0x20, 0xaf, 0xa0, 0x6d, 0x50, 0x22, 0xb3, 0x38, 0xe2, 0xcc, 0x21, 0x6d, 0xc4, 0xb5,
	0x7e, 0xeb, 0x20, 0x4a, 0xca, 0x47, 0x24, 0x8b, 0x47, 0x24, 0x67, 0x8b, 0x47, 0xa4, 0xad, 0x39,
	0x7f, 0xcc, 0x1c, 0x12, 0x02, 0x0d, 0x37, 0xd3, 0x48, 0xd7, 0x43, 0xa5, 0xf0, 0x4d, 0xf6, 0xa0,
	0xcb, 0x85, 0xd5, 0x92, 0xcd, 0x46, 0xcc, 0x38, 0x61, 0x1d, 0xdd, 0x08, 0xd1, 0xce, 0xdc, 0x7b,
	0x18, 0x9c, 0x64, 0x1f, 0x48, 0x5e, 0x48, 0x27, 0xb4, 0xc4, 0x51, 0xa6, 0x72, 0xad, 0x2c, 0x1a,
	0x4b, 0x37, 0xe3, 0x5a, 0x7f, 0x2b, 0xed, 0x2d, 0x22, 0x47, 0x8b, 0x00, 0xa1, 0xb0, 0xa9, 0x8d,
	0x98, 0xfa, 0x1e, 0xb7, 0x02, 0xb3, 0x30, 0xc9, 0x0e, 0x40, 0x66, 0x90, 0x39, 0x65, 0x46, 0x82,
	0xd3, 0x66, 0xa8, 0xd5, 0x9c, 0x7b, 0x86, 0x9c, 0xec, 0x42, 0xc7, 0x8f, 0x73, 0x14, 0xd6, 0xe7,
	0x09, 0x08, 0x44, 0xcb, 0x3b, 0xc3, 0xfc, 0x86, 0x9c, 0x1c, 0x42, 0xf3, 0x7c, 0x61, 0xd2, 0x56,
	0x18, 0xc1, 0x93, 0xe4, 0x9f, 0xd5, 0x26, 0x29, 0x4a, 0xe6, 0x90, 0x5f, 0xa0, 0xe9, 0x32, 0x8b,
	0x3c, 0x80, 0x2d, 0xc9, 0xc6, 0x28, 0x7d, 0x85, 0x76, 0xa8, 0xb0, 0x19, 0xec, 0x21, 0x27, 0x2f,
	0x61, 0xfd, 0xbd, 0xff, 0xa4, 0x9d, 0x9b, 0x2b, 0x97, 0x19, 0xe4, 0x39, 0x6c, 0x84, 0x03, 0xb1,
	0xb4, 0x1b, 0xaf, 0xf5, 0x5b, 0x07, 0xb4, 0x22, 0x37, 0x5c, 0x42, 0x3a, 0xe7, 0xc8, 0x33, 0x68,
	0x38, 0x36, 0xb1, 0xf4, 0x4e, 0xe0, 0xef, 0x57, 0xf1, 0x6c, 0x92, 0x06, 0xc6, 0x9f, 0x04, 0x1b,
	0xab, 0xc2, 0xd1, 0xed, 0xf2, 0x50, 0x82, 0xb1, 0x2b, 0x81, 0x04, 0x49, 0x7b, 0xa6, 0x2e, 0x1d,
	0xd9, 0x53, 0xe8, 0x86, 0x0a, 0xcb, 0x39, 0x96, 0x07, 0xd7, 0x76, 0x17, 0xcc, 0x90, 0x5f, 0xea,
	0xb7, 0x7e, 0xb3, 0x7e, 0x0f, 0x7e, 0x37, 0xa0, 0xb7, 0x2c, 0x73, 0x5a, 0xde, 0x39, 0xf9, 0x04,
	0xdb, 0x47, 0x7e, 0x83, 0x78, 0xa9, 0x83, 0x9d, 0xab, 0xb4, 0x42, 0x38, 0xba, 0x3e, 0x4c, 0x3e,
	0x40, 0xe7, 0x04, 0xdd, 0xad, 0xc9, 0xbd, 0x83, 0xed, 0x73, 0xcd, 0xff, 0xab, 0xc1, 0xaa, 0x59,
	0xbc, 0xc9, 0xb5, 0x9b, 0x79, 0xb1, 0x63, 0x94, 0x78, 0x3b, 0x62, 0x5f, 0xe0, 0xde, 0x21, 0xe7,
	0x15, 0x1b, 0xdc, 0xbb, 0x4a, 0x71, 0x05, 0xbb, 0x46, 0xf9, 0x1b, 0x44, 0x29, 0xe6, 0x6a, 0x5a,
	0xb6, 0x69, 0xdf, 0x1a, 0x95, 0xdf, 0xa6, 0xfc, 0x47, 0xe8, 0x9d, 0x22, 0x33, 0xd9, 0x8f, 0x25,
	0x6d, 0x49, 0x15, 0xfe, 0xb9, 0x40, 0x33, 0x8b, 0xe2, 0x8a, 0x48, 0x99, 0x9f, 0xa2, 0x2d, 0xa4,
	0xb3, 0xaf, 0xdb, 0x5f, 0x61, 0xf9, 0xe3, 0x1e, 0x6f, 0x84, 0x7f, 0xd9, 0x8b, 0xbf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x6f, 0x04, 0x2e, 0xc9, 0xd1, 0x05, 0x00, 0x00,
}
