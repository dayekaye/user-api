// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/tag/service.proto

/*
Package tag is a generated protocol buffer package.

It is generated from these files:
	rpc/tag/service.proto

It has these top-level messages:
	SearchResults
	Query
	Tag
	RelatedUserGroup
	SearchTrackGroup
	RelatedTrackGroup
	SearchTrack
	Empty
*/
package tag

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SearchResults struct {
	People    []*RelatedUserGroup  `protobuf:"bytes,1,rep,name=people" json:"people,omitempty"`
	Artists   []*RelatedUserGroup  `protobuf:"bytes,2,rep,name=artists" json:"artists,omitempty"`
	Labels    []*RelatedUserGroup  `protobuf:"bytes,3,rep,name=labels" json:"labels,omitempty"`
	Playlists []*RelatedTrackGroup `protobuf:"bytes,4,rep,name=playlists" json:"playlists,omitempty"`
	Albums    []*RelatedTrackGroup `protobuf:"bytes,5,rep,name=albums" json:"albums,omitempty"`
	Tracks    []*SearchTrack       `protobuf:"bytes,6,rep,name=tracks" json:"tracks,omitempty"`
}

func (m *SearchResults) Reset()                    { *m = SearchResults{} }
func (m *SearchResults) String() string            { return proto.CompactTextString(m) }
func (*SearchResults) ProtoMessage()               {}
func (*SearchResults) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SearchResults) GetPeople() []*RelatedUserGroup {
	if m != nil {
		return m.People
	}
	return nil
}

func (m *SearchResults) GetArtists() []*RelatedUserGroup {
	if m != nil {
		return m.Artists
	}
	return nil
}

func (m *SearchResults) GetLabels() []*RelatedUserGroup {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *SearchResults) GetPlaylists() []*RelatedTrackGroup {
	if m != nil {
		return m.Playlists
	}
	return nil
}

func (m *SearchResults) GetAlbums() []*RelatedTrackGroup {
	if m != nil {
		return m.Albums
	}
	return nil
}

func (m *SearchResults) GetTracks() []*SearchTrack {
	if m != nil {
		return m.Tracks
	}
	return nil
}

type Query struct {
	Query string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
}

func (m *Query) Reset()                    { *m = Query{} }
func (m *Query) String() string            { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()               {}
func (*Query) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Query) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type Tag struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Tag) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Tag) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RelatedUserGroup struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Avatar      []byte `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (m *RelatedUserGroup) Reset()                    { *m = RelatedUserGroup{} }
func (m *RelatedUserGroup) String() string            { return proto.CompactTextString(m) }
func (*RelatedUserGroup) ProtoMessage()               {}
func (*RelatedUserGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RelatedUserGroup) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RelatedUserGroup) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *RelatedUserGroup) GetAvatar() []byte {
	if m != nil {
		return m.Avatar
	}
	return nil
}

type SearchTrackGroup struct {
	Id            string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title         string            `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	UserGroup     *RelatedUserGroup `protobuf:"bytes,3,opt,name=user_group,json=userGroup" json:"user_group,omitempty"`
	TotalTracks   int32             `protobuf:"varint,4,opt,name=total_tracks,json=totalTracks" json:"total_tracks,omitempty"`
	Cover         []byte            `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	DisplayArtist string            `protobuf:"bytes,6,opt,name=display_artist,json=displayArtist" json:"display_artist,omitempty"`
}

func (m *SearchTrackGroup) Reset()                    { *m = SearchTrackGroup{} }
func (m *SearchTrackGroup) String() string            { return proto.CompactTextString(m) }
func (*SearchTrackGroup) ProtoMessage()               {}
func (*SearchTrackGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SearchTrackGroup) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SearchTrackGroup) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SearchTrackGroup) GetUserGroup() *RelatedUserGroup {
	if m != nil {
		return m.UserGroup
	}
	return nil
}

func (m *SearchTrackGroup) GetTotalTracks() int32 {
	if m != nil {
		return m.TotalTracks
	}
	return 0
}

func (m *SearchTrackGroup) GetCover() []byte {
	if m != nil {
		return m.Cover
	}
	return nil
}

func (m *SearchTrackGroup) GetDisplayArtist() string {
	if m != nil {
		return m.DisplayArtist
	}
	return ""
}

type RelatedTrackGroup struct {
	Id            string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title         string            `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Cover         []byte            `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	Type          string            `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
	About         string            `protobuf:"bytes,5,opt,name=about" json:"about,omitempty"`
	Private       bool              `protobuf:"varint,6,opt,name=private" json:"private,omitempty"`
	DisplayArtist string            `protobuf:"bytes,7,opt,name=display_artist,json=displayArtist" json:"display_artist,omitempty"`
	TotalTracks   int32             `protobuf:"varint,8,opt,name=total_tracks,json=totalTracks" json:"total_tracks,omitempty"`
	UserGroup     *RelatedUserGroup `protobuf:"bytes,9,opt,name=user_group,json=userGroup" json:"user_group,omitempty"`
}

func (m *RelatedTrackGroup) Reset()                    { *m = RelatedTrackGroup{} }
func (m *RelatedTrackGroup) String() string            { return proto.CompactTextString(m) }
func (*RelatedTrackGroup) ProtoMessage()               {}
func (*RelatedTrackGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RelatedTrackGroup) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RelatedTrackGroup) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *RelatedTrackGroup) GetCover() []byte {
	if m != nil {
		return m.Cover
	}
	return nil
}

func (m *RelatedTrackGroup) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RelatedTrackGroup) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

func (m *RelatedTrackGroup) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

func (m *RelatedTrackGroup) GetDisplayArtist() string {
	if m != nil {
		return m.DisplayArtist
	}
	return ""
}

func (m *RelatedTrackGroup) GetTotalTracks() int32 {
	if m != nil {
		return m.TotalTracks
	}
	return 0
}

func (m *RelatedTrackGroup) GetUserGroup() *RelatedUserGroup {
	if m != nil {
		return m.UserGroup
	}
	return nil
}

type SearchTrack struct {
	Id          string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title       string               `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Artists     []*RelatedUserGroup  `protobuf:"bytes,3,rep,name=artists" json:"artists,omitempty"`
	TrackGroups []*RelatedTrackGroup `protobuf:"bytes,4,rep,name=track_groups,json=trackGroups" json:"track_groups,omitempty"`
}

func (m *SearchTrack) Reset()                    { *m = SearchTrack{} }
func (m *SearchTrack) String() string            { return proto.CompactTextString(m) }
func (*SearchTrack) ProtoMessage()               {}
func (*SearchTrack) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SearchTrack) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SearchTrack) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SearchTrack) GetArtists() []*RelatedUserGroup {
	if m != nil {
		return m.Artists
	}
	return nil
}

func (m *SearchTrack) GetTrackGroups() []*RelatedTrackGroup {
	if m != nil {
		return m.TrackGroups
	}
	return nil
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func init() {
	proto.RegisterType((*SearchResults)(nil), "resonate.api.user.SearchResults")
	proto.RegisterType((*Query)(nil), "resonate.api.user.Query")
	proto.RegisterType((*Tag)(nil), "resonate.api.user.Tag")
	proto.RegisterType((*RelatedUserGroup)(nil), "resonate.api.user.RelatedUserGroup")
	proto.RegisterType((*SearchTrackGroup)(nil), "resonate.api.user.SearchTrackGroup")
	proto.RegisterType((*RelatedTrackGroup)(nil), "resonate.api.user.RelatedTrackGroup")
	proto.RegisterType((*SearchTrack)(nil), "resonate.api.user.SearchTrack")
	proto.RegisterType((*Empty)(nil), "resonate.api.user.Empty")
}

func init() { proto.RegisterFile("rpc/tag/service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 542 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x51, 0x8b, 0xd3, 0x40,
	0x10, 0x26, 0x4d, 0x93, 0x5e, 0xa7, 0xbd, 0xe3, 0x6e, 0xa9, 0xb2, 0x08, 0x4a, 0x2f, 0x2a, 0xf4,
	0xa9, 0x07, 0x27, 0xf8, 0xa2, 0xf7, 0x60, 0x41, 0x0a, 0x3e, 0x08, 0xe6, 0x2a, 0x88, 0x20, 0x65,
	0xda, 0x0e, 0x35, 0xb8, 0x6d, 0xd6, 0xdd, 0x4d, 0xa1, 0xaf, 0xfe, 0x13, 0x7f, 0x87, 0x7f, 0xc5,
	0x1f, 0x23, 0xd9, 0x4d, 0x6b, 0x34, 0x39, 0x68, 0xef, 0x6d, 0x66, 0xda, 0xef, 0x9b, 0x6f, 0xbe,
	0xc9, 0x0e, 0x3c, 0x50, 0x72, 0x7e, 0x65, 0x70, 0x79, 0xa5, 0x49, 0x6d, 0x92, 0x39, 0x0d, 0xa5,
	0x4a, 0x4d, 0xca, 0x2e, 0x14, 0xe9, 0x74, 0x8d, 0x86, 0x86, 0x28, 0x93, 0x61, 0xa6, 0x49, 0x45,
	0x3f, 0x7c, 0x38, 0xbd, 0x25, 0x54, 0xf3, 0xaf, 0x31, 0xe9, 0x4c, 0x18, 0xcd, 0x5e, 0x41, 0x28,
	0x29, 0x95, 0x82, 0xb8, 0xd7, 0xf7, 0x07, 0x9d, 0xeb, 0xa7, 0xc3, 0x0a, 0x6a, 0x18, 0x93, 0x40,
	0x43, 0x8b, 0x8f, 0x9a, 0xd4, 0x58, 0xa5, 0x99, 0x8c, 0x0b, 0x08, 0xbb, 0x81, 0x16, 0x2a, 0x93,
	0x68, 0xa3, 0x79, 0xe3, 0x70, 0xf4, 0x0e, 0x93, 0xf7, 0x16, 0x38, 0x23, 0xa1, 0xb9, 0x7f, 0x44,
	0x6f, 0x07, 0x61, 0x23, 0x68, 0x4b, 0x81, 0x5b, 0x61, 0xbb, 0x37, 0x2d, 0xfe, 0xd9, 0xdd, 0xf8,
	0x89, 0xc2, 0xf9, 0x37, 0x47, 0xf0, 0x17, 0xc6, 0x5e, 0x43, 0x88, 0x62, 0x96, 0xad, 0x34, 0x0f,
	0x8e, 0x20, 0x28, 0x30, 0xec, 0x25, 0x84, 0x26, 0xaf, 0x6a, 0x1e, 0x5a, 0xf4, 0x93, 0x1a, 0xb4,
	0x33, 0xdb, 0x82, 0xe3, 0xe2, 0xdf, 0xd1, 0x63, 0x08, 0x3e, 0x64, 0xa4, 0xb6, 0xac, 0x07, 0xc1,
	0xf7, 0x3c, 0xe0, 0x5e, 0xdf, 0x1b, 0xb4, 0x63, 0x97, 0x44, 0x37, 0xe0, 0x4f, 0x70, 0xc9, 0xce,
	0xa0, 0x91, 0x2c, 0x8a, 0x5f, 0x1a, 0xc9, 0x82, 0x31, 0x68, 0x9a, 0xad, 0x24, 0xde, 0xb0, 0x15,
	0x1b, 0xe7, 0xb5, 0x35, 0xae, 0x88, 0xfb, 0xae, 0x96, 0xc7, 0xd1, 0x17, 0x38, 0xff, 0xdf, 0xb3,
	0x0a, 0xd7, 0x25, 0x74, 0x17, 0x89, 0xce, 0x7d, 0x98, 0x5a, 0xbc, 0xe3, 0xec, 0x14, 0xb5, 0xf7,
	0xb8, 0x22, 0xf6, 0x10, 0x42, 0xdc, 0xa0, 0x41, 0x65, 0xc9, 0xbb, 0x71, 0x91, 0x45, 0xbf, 0x3d,
	0x38, 0x2f, 0x0d, 0x55, 0xcf, 0xdf, 0x83, 0xc0, 0x24, 0x46, 0xec, 0x88, 0x5d, 0xc2, 0x46, 0x00,
	0xb9, 0x27, 0xd3, 0x65, 0x8e, 0xb1, 0xb4, 0x07, 0xae, 0xbc, 0x9d, 0xed, 0x27, 0xb9, 0x84, 0xae,
	0x49, 0x0d, 0x8a, 0x69, 0xe1, 0x7c, 0xb3, 0xef, 0x0d, 0x82, 0xb8, 0x63, 0x6b, 0x56, 0x90, 0xce,
	0x9b, 0xcf, 0xd3, 0x0d, 0x29, 0x1e, 0x58, 0xe1, 0x2e, 0x61, 0xcf, 0xe1, 0x6c, 0x37, 0xb2, 0xfb,
	0xfc, 0x78, 0x68, 0xb5, 0x9d, 0x16, 0xd5, 0x37, 0xb6, 0x18, 0xfd, 0x6c, 0xc0, 0x45, 0x65, 0xe3,
	0x07, 0xce, 0xb7, 0x6f, 0xec, 0x97, 0x1b, 0xef, 0xf6, 0xd6, 0x2c, 0xed, 0xad, 0x07, 0x01, 0xce,
	0xd2, 0xcc, 0x58, 0x89, 0xed, 0xd8, 0x25, 0x8c, 0x43, 0x4b, 0xaa, 0x64, 0x83, 0x86, 0xac, 0xb6,
	0x93, 0x78, 0x97, 0xd6, 0x88, 0x6f, 0xd5, 0x88, 0xaf, 0x98, 0x73, 0x52, 0x35, 0xe7, 0xdf, 0x1d,
	0xb4, 0xef, 0xb3, 0x83, 0xe8, 0x97, 0x07, 0x9d, 0xd2, 0x27, 0x70, 0xa0, 0x3b, 0xa5, 0x5b, 0xe1,
	0xdf, 0xe3, 0x56, 0x8c, 0xa1, 0x6b, 0xa7, 0x72, 0xca, 0x8f, 0x7b, 0xf1, 0x1d, 0xb3, 0x8f, 0x75,
	0xd4, 0x82, 0xe0, 0xed, 0x4a, 0x9a, 0xed, 0xf5, 0x27, 0x80, 0x09, 0x2e, 0x6f, 0xdd, 0xc9, 0x64,
	0xef, 0xa0, 0xeb, 0x66, 0x1a, 0xd3, 0x5a, 0x91, 0x66, 0xbc, 0x86, 0xd9, 0xbe, 0xda, 0x47, 0xfd,
	0x3b, 0x9f, 0x79, 0x71, 0x53, 0x47, 0xc1, 0x67, 0xdf, 0xe0, 0x72, 0x16, 0xda, 0x33, 0xfc, 0xe2,
	0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x85, 0x4a, 0xd0, 0x9f, 0x05, 0x00, 0x00,
}
