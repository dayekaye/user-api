// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/address/service.proto

package address

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _struct "github.com/golang/protobuf/ptypes/struct"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Based on https://community.algolia.com/places/rest.html#search-parameters
type AddressQuery struct {
	Query                string   `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	HitsPerPage          int32    `protobuf:"varint,3,opt,name=hits_per_page,json=hitsPerPage" json:"hits_per_page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressQuery) Reset()         { *m = AddressQuery{} }
func (m *AddressQuery) String() string { return proto.CompactTextString(m) }
func (*AddressQuery) ProtoMessage()    {}
func (*AddressQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_d9d7666973987393, []int{0}
}
func (m *AddressQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressQuery.Unmarshal(m, b)
}
func (m *AddressQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressQuery.Marshal(b, m, deterministic)
}
func (dst *AddressQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressQuery.Merge(dst, src)
}
func (m *AddressQuery) XXX_Size() int {
	return xxx_messageInfo_AddressQuery.Size(m)
}
func (m *AddressQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressQuery.DiscardUnknown(m)
}

var xxx_messageInfo_AddressQuery proto.InternalMessageInfo

func (m *AddressQuery) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *AddressQuery) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AddressQuery) GetHitsPerPage() int32 {
	if m != nil {
		return m.HitsPerPage
	}
	return 0
}

type AddressResults struct {
	Hits                 []*AddressResult `protobuf:"bytes,1,rep,name=hits" json:"hits,omitempty"`
	NbHits               int32            `protobuf:"varint,2,opt,name=nb_hits,json=nbHits" json:"nb_hits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AddressResults) Reset()         { *m = AddressResults{} }
func (m *AddressResults) String() string { return proto.CompactTextString(m) }
func (*AddressResults) ProtoMessage()    {}
func (*AddressResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_d9d7666973987393, []int{1}
}
func (m *AddressResults) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressResults.Unmarshal(m, b)
}
func (m *AddressResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressResults.Marshal(b, m, deterministic)
}
func (dst *AddressResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressResults.Merge(dst, src)
}
func (m *AddressResults) XXX_Size() int {
	return xxx_messageInfo_AddressResults.Size(m)
}
func (m *AddressResults) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressResults.DiscardUnknown(m)
}

var xxx_messageInfo_AddressResults proto.InternalMessageInfo

func (m *AddressResults) GetHits() []*AddressResult {
	if m != nil {
		return m.Hits
	}
	return nil
}

func (m *AddressResults) GetNbHits() int32 {
	if m != nil {
		return m.NbHits
	}
	return 0
}

type AddressResult struct {
	ObjectId             string                        `protobuf:"bytes,1,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Country              map[string]string             `protobuf:"bytes,2,rep,name=country" json:"country,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Postcode             []string                      `protobuf:"bytes,3,rep,name=postcode" json:"postcode,omitempty"`
	Administrative       []string                      `protobuf:"bytes,4,rep,name=administrative" json:"administrative,omitempty"`
	CountryCode          string                        `protobuf:"bytes,5,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	Geoloc               map[string]float32            `protobuf:"bytes,6,rep,name=geoloc" json:"geoloc,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	LocaleNames          map[string]*_struct.ListValue `protobuf:"bytes,7,rep,name=locale_names,json=localeNames" json:"locale_names,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	City                 map[string]*_struct.ListValue `protobuf:"bytes,8,rep,name=city" json:"city,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *AddressResult) Reset()         { *m = AddressResult{} }
func (m *AddressResult) String() string { return proto.CompactTextString(m) }
func (*AddressResult) ProtoMessage()    {}
func (*AddressResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_d9d7666973987393, []int{2}
}
func (m *AddressResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressResult.Unmarshal(m, b)
}
func (m *AddressResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressResult.Marshal(b, m, deterministic)
}
func (dst *AddressResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressResult.Merge(dst, src)
}
func (m *AddressResult) XXX_Size() int {
	return xxx_messageInfo_AddressResult.Size(m)
}
func (m *AddressResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressResult.DiscardUnknown(m)
}

var xxx_messageInfo_AddressResult proto.InternalMessageInfo

func (m *AddressResult) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *AddressResult) GetCountry() map[string]string {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *AddressResult) GetPostcode() []string {
	if m != nil {
		return m.Postcode
	}
	return nil
}

func (m *AddressResult) GetAdministrative() []string {
	if m != nil {
		return m.Administrative
	}
	return nil
}

func (m *AddressResult) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *AddressResult) GetGeoloc() map[string]float32 {
	if m != nil {
		return m.Geoloc
	}
	return nil
}

func (m *AddressResult) GetLocaleNames() map[string]*_struct.ListValue {
	if m != nil {
		return m.LocaleNames
	}
	return nil
}

func (m *AddressResult) GetCity() map[string]*_struct.ListValue {
	if m != nil {
		return m.City
	}
	return nil
}

func init() {
	proto.RegisterType((*AddressQuery)(nil), "resonate.api.user.AddressQuery")
	proto.RegisterType((*AddressResults)(nil), "resonate.api.user.AddressResults")
	proto.RegisterType((*AddressResult)(nil), "resonate.api.user.AddressResult")
	proto.RegisterMapType((map[string]*_struct.ListValue)(nil), "resonate.api.user.AddressResult.CityEntry")
	proto.RegisterMapType((map[string]string)(nil), "resonate.api.user.AddressResult.CountryEntry")
	proto.RegisterMapType((map[string]float32)(nil), "resonate.api.user.AddressResult.GeolocEntry")
	proto.RegisterMapType((map[string]*_struct.ListValue)(nil), "resonate.api.user.AddressResult.LocaleNamesEntry")
}

func init() { proto.RegisterFile("rpc/address/service.proto", fileDescriptor_service_d9d7666973987393) }

var fileDescriptor_service_d9d7666973987393 = []byte{
	// 506 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0xa5, 0xdf, 0xed, 0x4d, 0xbb, 0xac, 0x83, 0x60, 0x8c, 0x82, 0xdd, 0x3e, 0x48, 0x11, 0x4d,
	0xb5, 0xfa, 0xa0, 0xfb, 0x20, 0xe8, 0x2a, 0xab, 0xb0, 0xc8, 0xda, 0x8a, 0x0f, 0x8b, 0x10, 0xa6,
	0x93, 0x6b, 0x76, 0x34, 0x9b, 0x89, 0x33, 0x93, 0x42, 0xff, 0xad, 0x3f, 0x45, 0x66, 0x26, 0x59,
	0xb3, 0xab, 0x92, 0x17, 0x5f, 0xca, 0xcc, 0xe1, 0x9c, 0x33, 0xe7, 0xde, 0xde, 0x1b, 0xb8, 0x2d,
	0x73, 0xb6, 0xa0, 0x71, 0x2c, 0x51, 0xa9, 0x85, 0x42, 0xb9, 0xe5, 0x0c, 0xc3, 0x5c, 0x0a, 0x2d,
	0xc8, 0x0d, 0x89, 0x4a, 0x64, 0x54, 0x63, 0x48, 0x73, 0x1e, 0x16, 0x0a, 0x65, 0x70, 0x37, 0x11,
	0x22, 0x49, 0x71, 0x61, 0x09, 0x9b, 0xe2, 0xeb, 0x42, 0x69, 0x59, 0x30, 0xed, 0x04, 0xb3, 0x2f,
	0x30, 0x7e, 0xe5, 0x9c, 0x3e, 0x16, 0x28, 0x77, 0xe4, 0x26, 0xf4, 0x7e, 0x98, 0x83, 0xdf, 0x9a,
	0xb6, 0xe6, 0xa3, 0x95, 0xbb, 0x10, 0x02, 0x5d, 0xbd, 0xcb, 0xd1, 0x6f, 0x5b, 0xd0, 0x9e, 0xc9,
	0x0c, 0x26, 0xe7, 0x5c, 0xab, 0x28, 0x47, 0x19, 0xe5, 0x34, 0x41, 0xbf, 0x33, 0x6d, 0xcd, 0x7b,
	0x2b, 0xcf, 0x80, 0xa7, 0x28, 0x4f, 0x69, 0x82, 0xb3, 0x08, 0xf6, 0x4a, 0xf7, 0x15, 0xaa, 0x22,
	0xd5, 0x8a, 0x3c, 0x83, 0xae, 0x21, 0xf8, 0xad, 0x69, 0x67, 0xee, 0x2d, 0xa7, 0xe1, 0x1f, 0x79,
	0xc3, 0x2b, 0x82, 0x95, 0x65, 0x93, 0x5b, 0x30, 0xc8, 0x36, 0x91, 0x15, 0xb6, 0xed, 0x2b, 0xfd,
	0x6c, 0xf3, 0x8e, 0x6b, 0x35, 0xfb, 0xd9, 0x83, 0xc9, 0x15, 0x01, 0xb9, 0x03, 0x23, 0xb1, 0xf9,
	0x86, 0x4c, 0x47, 0x3c, 0x2e, 0x8b, 0x18, 0x3a, 0xe0, 0x7d, 0x4c, 0x8e, 0x61, 0xc0, 0x44, 0x91,
	0x69, 0xb9, 0xf3, 0xdb, 0x36, 0xc0, 0xa3, 0xa6, 0x00, 0xe1, 0x91, 0xe3, 0xbf, 0x35, 0x3f, 0xab,
	0x4a, 0x4d, 0x02, 0x18, 0xe6, 0x42, 0x69, 0x26, 0x62, 0x53, 0x77, 0xc7, 0x3c, 0x52, 0xdd, 0xc9,
	0x7d, 0xd8, 0xa3, 0xf1, 0x05, 0xcf, 0xb8, 0xd2, 0x92, 0x6a, 0xbe, 0x45, 0xbf, 0x6b, 0x19, 0xd7,
	0x50, 0x72, 0x00, 0xe3, 0xd2, 0x2e, 0xb2, 0x3e, 0x3d, 0x1b, 0xd6, 0x2b, 0xb1, 0x23, 0x63, 0xf5,
	0x06, 0xfa, 0x09, 0x8a, 0x54, 0x30, 0xbf, 0x6f, 0xe3, 0x3e, 0x6c, 0x8c, 0x7b, 0x6c, 0xe9, 0x2e,
	0x6d, 0xa9, 0x25, 0x9f, 0x60, 0x9c, 0x0a, 0x46, 0x53, 0x8c, 0x32, 0x7a, 0x81, 0xca, 0x1f, 0x58,
	0xaf, 0x27, 0x8d, 0x5e, 0x27, 0x56, 0xf4, 0xc1, 0x68, 0x9c, 0xa1, 0x97, 0xfe, 0x46, 0xc8, 0x4b,
	0xe8, 0x32, 0xae, 0x77, 0xfe, 0xd0, 0xba, 0x3d, 0x68, 0x6e, 0x24, 0xd7, 0x65, 0x17, 0xad, 0x2e,
	0x38, 0x84, 0x71, 0xbd, 0xb7, 0x64, 0x1f, 0x3a, 0xdf, 0xb1, 0x9a, 0x3b, 0x73, 0x34, 0xb3, 0xb8,
	0xa5, 0x69, 0x51, 0x8d, 0x9d, 0xbb, 0x1c, 0xb6, 0x9f, 0xb7, 0x82, 0x17, 0xe0, 0xd5, 0x0a, 0x6d,
	0x92, 0xb6, 0xeb, 0xd2, 0x33, 0xd8, 0xbf, 0x5e, 0xd7, 0x5f, 0xf4, 0x8f, 0xeb, 0x7a, 0x6f, 0x19,
	0x84, 0x6e, 0x89, 0xc2, 0x6a, 0x89, 0xc2, 0x13, 0xae, 0xf4, 0x67, 0xc3, 0xa8, 0x7b, 0xaf, 0x61,
	0x74, 0x59, 0xe5, 0xff, 0x32, 0x5d, 0xe2, 0xe5, 0x0e, 0xad, 0xdd, 0xaa, 0x93, 0x35, 0x4c, 0xd6,
	0x48, 0x25, 0x3b, 0x2f, 0x71, 0x72, 0xef, 0xdf, 0xcd, 0xb7, 0x5b, 0x1d, 0x1c, 0x34, 0xfd, 0x3b,
	0xea, 0xf5, 0xe8, 0x6c, 0x50, 0x7e, 0x52, 0x36, 0x7d, 0x1b, 0xe8, 0xe9, 0xaf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xd7, 0x6c, 0x04, 0x00, 0x68, 0x04, 0x00, 0x00,
}
