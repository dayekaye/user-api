syntax = "proto3";

import "user-api/rpc/user/service.proto";

package resonate.api.user;
option go_package = "usergroup";

service UserGroupService {
  rpc CreateUserGroup(UserGroup) returns (UserGroup);
  rpc GetUserGroup(UserGroup) returns (UserGroup);
  rpc UpdateUserGroup(UserGroup) returns (Empty);
  rpc DeleteUserGroup(UserGroup) returns (Empty);

  rpc GetLabelUserGroups(Empty) returns (GroupedUserGroups);
  rpc GetUserGroupTypes(Empty) returns (GroupTaxonomies);

  rpc AddSubGroups(UserGroups) returns (Empty); // Update?
  rpc RemoveSubGroups(UserGroups) returns (Empty);
  rpc AddMembers(User) returns (Empty);
  rpc RemoveMembers(User) returns (Empty);
}

message UserGroup {
  string id = 1; // required
  string display_name = 2; // required
  string description = 3;
  string short_bio = 4;
  bytes avatar = 5; // required
  bytes banner = 6;
  string owner_id = 7; // required
  GroupTaxonomy type = 8; // required
  repeated User followers = 9;
  repeated User members = 10;
  repeated UserGroup sub_groups = 11;
  repeated Link links = 12;
  repeated Tag tags = 13;
  StreetAddress address = 14;
  Privacy privacy = 16;

  repeated UserGroup recommended_artists = 17;
  repeated UserGroup labels = 18;

  repeated string highlighted_tracks = 19; // TODO change type once track rpc implemented
  string featured_track_group = 20;  // TODO change type once trackgroup rpc implemented

  string group_email_address = 21;
  // tracks
  // track_groups
  // labels
}

message UserGroups {
  repeated UserGroup user_groups = 1;
}

message GroupTaxonomy {
  string id = 1;
  string type = 2;
  string name = 3;
}

message GroupTaxonomies {
  repeated GroupTaxonomy types = 1;
}

message Link {
  string id = 1;
  string platform = 2;
  string type = 3;
  string uri = 4;
  bool personal_data = 5;
}

message Tag {
  string id = 1;
  string type = 2;
  string name = 3;
}

message Privacy {
  string id = 1;
  bool private = 2;
  bool owned_tracks = 3;
  bool supported_artists = 4;
}

message GroupedUserGroups {
  repeated UserGroup labels = 1;
  repeated UserGroup artists = 2;
}
