// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/usergroup/service.proto

package usergroup

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import user "user-api/rpc/user"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UserGroup struct {
	Id                   string              `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	DisplayName          string              `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Description          string              `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ShortBio             string              `protobuf:"bytes,4,opt,name=short_bio,json=shortBio" json:"short_bio,omitempty"`
	Avatar               []byte              `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Banner               []byte              `protobuf:"bytes,6,opt,name=banner,proto3" json:"banner,omitempty"`
	OwnerId              string              `protobuf:"bytes,7,opt,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	Type                 *GroupTaxonomy      `protobuf:"bytes,8,opt,name=type" json:"type,omitempty"`
	Followers            []*user.User        `protobuf:"bytes,9,rep,name=followers" json:"followers,omitempty"`
	Members              []*user.User        `protobuf:"bytes,10,rep,name=members" json:"members,omitempty"`
	SubGroups            []*UserGroup        `protobuf:"bytes,11,rep,name=sub_groups,json=subGroups" json:"sub_groups,omitempty"`
	Links                []*Link             `protobuf:"bytes,12,rep,name=links" json:"links,omitempty"`
	Tags                 []*Tag              `protobuf:"bytes,13,rep,name=tags" json:"tags,omitempty"`
	Address              *user.StreetAddress `protobuf:"bytes,14,opt,name=address" json:"address,omitempty"`
	Privacy              *Privacy            `protobuf:"bytes,16,opt,name=privacy" json:"privacy,omitempty"`
	RecommendedArtists   []*UserGroup        `protobuf:"bytes,17,rep,name=recommended_artists,json=recommendedArtists" json:"recommended_artists,omitempty"`
	Labels               []*UserGroup        `protobuf:"bytes,18,rep,name=labels" json:"labels,omitempty"`
	HighlightedTracks    []string            `protobuf:"bytes,19,rep,name=highlighted_tracks,json=highlightedTracks" json:"highlighted_tracks,omitempty"`
	FeaturedTrackGroup   string              `protobuf:"bytes,20,opt,name=featured_track_group,json=featuredTrackGroup" json:"featured_track_group,omitempty"`
	GroupEmailAddress    string              `protobuf:"bytes,21,opt,name=group_email_address,json=groupEmailAddress" json:"group_email_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UserGroup) Reset()         { *m = UserGroup{} }
func (m *UserGroup) String() string { return proto.CompactTextString(m) }
func (*UserGroup) ProtoMessage()    {}
func (*UserGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_376979d828139cf4, []int{0}
}
func (m *UserGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserGroup.Unmarshal(m, b)
}
func (m *UserGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserGroup.Marshal(b, m, deterministic)
}
func (dst *UserGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserGroup.Merge(dst, src)
}
func (m *UserGroup) XXX_Size() int {
	return xxx_messageInfo_UserGroup.Size(m)
}
func (m *UserGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_UserGroup.DiscardUnknown(m)
}

var xxx_messageInfo_UserGroup proto.InternalMessageInfo

func (m *UserGroup) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserGroup) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *UserGroup) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UserGroup) GetShortBio() string {
	if m != nil {
		return m.ShortBio
	}
	return ""
}

func (m *UserGroup) GetAvatar() []byte {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *UserGroup) GetBanner() []byte {
	if m != nil {
		return m.Banner
	}
	return nil
}

func (m *UserGroup) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *UserGroup) GetType() *GroupTaxonomy {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *UserGroup) GetFollowers() []*user.User {
	if m != nil {
		return m.Followers
	}
	return nil
}

func (m *UserGroup) GetMembers() []*user.User {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *UserGroup) GetSubGroups() []*UserGroup {
	if m != nil {
		return m.SubGroups
	}
	return nil
}

func (m *UserGroup) GetLinks() []*Link {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *UserGroup) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *UserGroup) GetAddress() *user.StreetAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *UserGroup) GetPrivacy() *Privacy {
	if m != nil {
		return m.Privacy
	}
	return nil
}

func (m *UserGroup) GetRecommendedArtists() []*UserGroup {
	if m != nil {
		return m.RecommendedArtists
	}
	return nil
}

func (m *UserGroup) GetLabels() []*UserGroup {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UserGroup) GetHighlightedTracks() []string {
	if m != nil {
		return m.HighlightedTracks
	}
	return nil
}

func (m *UserGroup) GetFeaturedTrackGroup() string {
	if m != nil {
		return m.FeaturedTrackGroup
	}
	return ""
}

func (m *UserGroup) GetGroupEmailAddress() string {
	if m != nil {
		return m.GroupEmailAddress
	}
	return ""
}

type UserGroups struct {
	UserGroups           []*UserGroup `protobuf:"bytes,1,rep,name=user_groups,json=userGroups" json:"user_groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UserGroups) Reset()         { *m = UserGroups{} }
func (m *UserGroups) String() string { return proto.CompactTextString(m) }
func (*UserGroups) ProtoMessage()    {}
func (*UserGroups) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_376979d828139cf4, []int{1}
}
func (m *UserGroups) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserGroups.Unmarshal(m, b)
}
func (m *UserGroups) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserGroups.Marshal(b, m, deterministic)
}
func (dst *UserGroups) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserGroups.Merge(dst, src)
}
func (m *UserGroups) XXX_Size() int {
	return xxx_messageInfo_UserGroups.Size(m)
}
func (m *UserGroups) XXX_DiscardUnknown() {
	xxx_messageInfo_UserGroups.DiscardUnknown(m)
}

var xxx_messageInfo_UserGroups proto.InternalMessageInfo

func (m *UserGroups) GetUserGroups() []*UserGroup {
	if m != nil {
		return m.UserGroups
	}
	return nil
}

type GroupTaxonomy struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupTaxonomy) Reset()         { *m = GroupTaxonomy{} }
func (m *GroupTaxonomy) String() string { return proto.CompactTextString(m) }
func (*GroupTaxonomy) ProtoMessage()    {}
func (*GroupTaxonomy) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_376979d828139cf4, []int{2}
}
func (m *GroupTaxonomy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupTaxonomy.Unmarshal(m, b)
}
func (m *GroupTaxonomy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupTaxonomy.Marshal(b, m, deterministic)
}
func (dst *GroupTaxonomy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupTaxonomy.Merge(dst, src)
}
func (m *GroupTaxonomy) XXX_Size() int {
	return xxx_messageInfo_GroupTaxonomy.Size(m)
}
func (m *GroupTaxonomy) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupTaxonomy.DiscardUnknown(m)
}

var xxx_messageInfo_GroupTaxonomy proto.InternalMessageInfo

func (m *GroupTaxonomy) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GroupTaxonomy) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *GroupTaxonomy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GroupTaxonomies struct {
	Types                []*GroupTaxonomy `protobuf:"bytes,1,rep,name=types" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GroupTaxonomies) Reset()         { *m = GroupTaxonomies{} }
func (m *GroupTaxonomies) String() string { return proto.CompactTextString(m) }
func (*GroupTaxonomies) ProtoMessage()    {}
func (*GroupTaxonomies) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_376979d828139cf4, []int{3}
}
func (m *GroupTaxonomies) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupTaxonomies.Unmarshal(m, b)
}
func (m *GroupTaxonomies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupTaxonomies.Marshal(b, m, deterministic)
}
func (dst *GroupTaxonomies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupTaxonomies.Merge(dst, src)
}
func (m *GroupTaxonomies) XXX_Size() int {
	return xxx_messageInfo_GroupTaxonomies.Size(m)
}
func (m *GroupTaxonomies) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupTaxonomies.DiscardUnknown(m)
}

var xxx_messageInfo_GroupTaxonomies proto.InternalMessageInfo

func (m *GroupTaxonomies) GetTypes() []*GroupTaxonomy {
	if m != nil {
		return m.Types
	}
	return nil
}

type Link struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Platform             string   `protobuf:"bytes,2,opt,name=platform" json:"platform,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Uri                  string   `protobuf:"bytes,4,opt,name=uri" json:"uri,omitempty"`
	PersonalData         bool     `protobuf:"varint,5,opt,name=personal_data,json=personalData" json:"personal_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Link) Reset()         { *m = Link{} }
func (m *Link) String() string { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()    {}
func (*Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_376979d828139cf4, []int{4}
}
func (m *Link) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Link.Unmarshal(m, b)
}
func (m *Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Link.Marshal(b, m, deterministic)
}
func (dst *Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Link.Merge(dst, src)
}
func (m *Link) XXX_Size() int {
	return xxx_messageInfo_Link.Size(m)
}
func (m *Link) XXX_DiscardUnknown() {
	xxx_messageInfo_Link.DiscardUnknown(m)
}

var xxx_messageInfo_Link proto.InternalMessageInfo

func (m *Link) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Link) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *Link) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Link) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *Link) GetPersonalData() bool {
	if m != nil {
		return m.PersonalData
	}
	return false
}

type Tag struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_376979d828139cf4, []int{5}
}
func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (dst *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(dst, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Tag) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Privacy struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Private              bool     `protobuf:"varint,2,opt,name=private" json:"private,omitempty"`
	OwnedTracks          bool     `protobuf:"varint,3,opt,name=owned_tracks,json=ownedTracks" json:"owned_tracks,omitempty"`
	SupportedArtists     bool     `protobuf:"varint,4,opt,name=supported_artists,json=supportedArtists" json:"supported_artists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Privacy) Reset()         { *m = Privacy{} }
func (m *Privacy) String() string { return proto.CompactTextString(m) }
func (*Privacy) ProtoMessage()    {}
func (*Privacy) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_376979d828139cf4, []int{6}
}
func (m *Privacy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Privacy.Unmarshal(m, b)
}
func (m *Privacy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Privacy.Marshal(b, m, deterministic)
}
func (dst *Privacy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Privacy.Merge(dst, src)
}
func (m *Privacy) XXX_Size() int {
	return xxx_messageInfo_Privacy.Size(m)
}
func (m *Privacy) XXX_DiscardUnknown() {
	xxx_messageInfo_Privacy.DiscardUnknown(m)
}

var xxx_messageInfo_Privacy proto.InternalMessageInfo

func (m *Privacy) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Privacy) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

func (m *Privacy) GetOwnedTracks() bool {
	if m != nil {
		return m.OwnedTracks
	}
	return false
}

func (m *Privacy) GetSupportedArtists() bool {
	if m != nil {
		return m.SupportedArtists
	}
	return false
}

type GroupedUserGroups struct {
	Labels               []*UserGroup `protobuf:"bytes,1,rep,name=labels" json:"labels,omitempty"`
	Artists              []*UserGroup `protobuf:"bytes,2,rep,name=artists" json:"artists,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GroupedUserGroups) Reset()         { *m = GroupedUserGroups{} }
func (m *GroupedUserGroups) String() string { return proto.CompactTextString(m) }
func (*GroupedUserGroups) ProtoMessage()    {}
func (*GroupedUserGroups) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_376979d828139cf4, []int{7}
}
func (m *GroupedUserGroups) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupedUserGroups.Unmarshal(m, b)
}
func (m *GroupedUserGroups) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupedUserGroups.Marshal(b, m, deterministic)
}
func (dst *GroupedUserGroups) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupedUserGroups.Merge(dst, src)
}
func (m *GroupedUserGroups) XXX_Size() int {
	return xxx_messageInfo_GroupedUserGroups.Size(m)
}
func (m *GroupedUserGroups) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupedUserGroups.DiscardUnknown(m)
}

var xxx_messageInfo_GroupedUserGroups proto.InternalMessageInfo

func (m *GroupedUserGroups) GetLabels() []*UserGroup {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *GroupedUserGroups) GetArtists() []*UserGroup {
	if m != nil {
		return m.Artists
	}
	return nil
}

func init() {
	proto.RegisterType((*UserGroup)(nil), "resonate.api.user.UserGroup")
	proto.RegisterType((*UserGroups)(nil), "resonate.api.user.UserGroups")
	proto.RegisterType((*GroupTaxonomy)(nil), "resonate.api.user.GroupTaxonomy")
	proto.RegisterType((*GroupTaxonomies)(nil), "resonate.api.user.GroupTaxonomies")
	proto.RegisterType((*Link)(nil), "resonate.api.user.Link")
	proto.RegisterType((*Tag)(nil), "resonate.api.user.Tag")
	proto.RegisterType((*Privacy)(nil), "resonate.api.user.Privacy")
	proto.RegisterType((*GroupedUserGroups)(nil), "resonate.api.user.GroupedUserGroups")
}

func init() {
	proto.RegisterFile("rpc/usergroup/service.proto", fileDescriptor_service_376979d828139cf4)
}

var fileDescriptor_service_376979d828139cf4 = []byte{
	// 868 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcf, 0x6f, 0x1b, 0x45,
	0x14, 0x96, 0x63, 0xc7, 0x3f, 0x9e, 0x9d, 0x26, 0x9e, 0x94, 0x32, 0xb8, 0x20, 0x8c, 0xe1, 0x60,
	0x81, 0xe2, 0x40, 0x08, 0x3d, 0x80, 0x2a, 0x94, 0xd0, 0xca, 0x4a, 0x69, 0x10, 0x6c, 0xdc, 0x0b,
	0x97, 0xd5, 0xd8, 0xf3, 0xe2, 0x8c, 0xb2, 0xbb, 0xb3, 0x9a, 0x99, 0x4d, 0xf1, 0x81, 0x03, 0x42,
	0x42, 0xfc, 0xd9, 0xd5, 0xcc, 0xfe, 0xc8, 0x46, 0x89, 0x5d, 0x37, 0xca, 0xc5, 0xda, 0x79, 0xef,
	0xfb, 0x3e, 0xbf, 0x7d, 0xf3, 0xbe, 0x99, 0x85, 0xa7, 0x2a, 0x9e, 0xed, 0x27, 0x1a, 0xd5, 0x5c,
	0xc9, 0x24, 0xde, 0xd7, 0xa8, 0xae, 0xc4, 0x0c, 0x47, 0xb1, 0x92, 0x46, 0x92, 0xae, 0x42, 0x2d,
	0x23, 0x66, 0x70, 0xc4, 0x62, 0x31, 0xb2, 0xa8, 0xde, 0xe7, 0xf6, 0x77, 0x8f, 0xc5, 0x62, 0x3f,
	0x27, 0xde, 0xe4, 0x0c, 0xfe, 0x6f, 0x40, 0xeb, 0x8d, 0x46, 0x35, 0xb6, 0x7a, 0xe4, 0x11, 0x6c,
	0x08, 0x4e, 0x2b, 0xfd, 0xca, 0xb0, 0xe5, 0x6d, 0x08, 0x4e, 0xbe, 0x80, 0x0e, 0x17, 0x3a, 0x0e,
	0xd8, 0xc2, 0x8f, 0x58, 0x88, 0x74, 0xc3, 0x65, 0xda, 0x59, 0xec, 0x37, 0x16, 0x22, 0xe9, 0x43,
	0x9b, 0xa3, 0x9e, 0x29, 0x11, 0x1b, 0x21, 0x23, 0x5a, 0xcd, 0x10, 0xd7, 0x21, 0xf2, 0x14, 0x5a,
	0xfa, 0x42, 0x2a, 0xe3, 0x4f, 0x85, 0xa4, 0x35, 0x97, 0x6f, 0xba, 0xc0, 0xb1, 0x90, 0xe4, 0x09,
	0xd4, 0xd9, 0x15, 0x33, 0x4c, 0xd1, 0xcd, 0x7e, 0x65, 0xd8, 0xf1, 0xb2, 0x95, 0x8d, 0x4f, 0x59,
	0x14, 0xa1, 0xa2, 0xf5, 0x34, 0x9e, 0xae, 0xc8, 0x27, 0xd0, 0x94, 0x6f, 0x23, 0x54, 0xbe, 0xe0,
	0xb4, 0xe1, 0xb4, 0x1a, 0x6e, 0x7d, 0xc2, 0xc9, 0x21, 0xd4, 0xcc, 0x22, 0x46, 0xda, 0xec, 0x57,
	0x86, 0xed, 0x83, 0xfe, 0xe8, 0x56, 0x37, 0x46, 0xee, 0x25, 0x27, 0xec, 0x2f, 0x19, 0xc9, 0x70,
	0xe1, 0x39, 0x34, 0xf9, 0x01, 0x5a, 0xe7, 0x32, 0x08, 0xe4, 0x5b, 0x54, 0x9a, 0xb6, 0xfa, 0xd5,
	0x61, 0xfb, 0xe0, 0xe3, 0x3b, 0xa8, 0xb6, 0x47, 0xde, 0x35, 0x92, 0x7c, 0x07, 0x8d, 0x10, 0xc3,
	0xa9, 0x25, 0xc1, 0x6a, 0x52, 0x8e, 0x23, 0x3f, 0x01, 0xe8, 0x64, 0xea, 0xbb, 0x9d, 0xd3, 0xb4,
	0xed, 0x58, 0x9f, 0x2e, 0x61, 0xb9, 0x4a, 0xbd, 0x96, 0x4e, 0xa6, 0xee, 0x49, 0x93, 0x3d, 0xd8,
	0x0c, 0x44, 0x74, 0xa9, 0x69, 0x67, 0xe9, 0xbf, 0xbd, 0x16, 0xd1, 0xa5, 0x97, 0xa2, 0xc8, 0xd7,
	0x50, 0x33, 0x6c, 0xae, 0xe9, 0x96, 0x43, 0x3f, 0xb9, 0x03, 0x3d, 0x61, 0x73, 0xcf, 0x61, 0xc8,
	0x8f, 0xd0, 0x60, 0x9c, 0x2b, 0xd4, 0x9a, 0x3e, 0x5a, 0xda, 0xba, 0x33, 0xa3, 0x10, 0xcd, 0x51,
	0x8a, 0xf3, 0x72, 0x02, 0x39, 0x84, 0x46, 0xac, 0xc4, 0x15, 0x9b, 0x2d, 0xe8, 0x8e, 0xe3, 0xf6,
	0xee, 0xe0, 0xfe, 0x9e, 0x22, 0xbc, 0x1c, 0x4a, 0x4e, 0x61, 0x57, 0xe1, 0x4c, 0x86, 0x21, 0x46,
	0x1c, 0xb9, 0xcf, 0x94, 0x11, 0xda, 0x68, 0xda, 0x5d, 0xa3, 0x25, 0xa4, 0x44, 0x3c, 0x4a, 0x79,
	0xe4, 0x10, 0xea, 0x01, 0x9b, 0x62, 0xa0, 0x29, 0x59, 0x43, 0x21, 0xc3, 0x92, 0x3d, 0x20, 0x17,
	0x62, 0x7e, 0x11, 0x88, 0xf9, 0x85, 0x41, 0xee, 0x1b, 0xc5, 0x66, 0x97, 0x9a, 0xee, 0xf6, 0xab,
	0xc3, 0x96, 0xd7, 0x2d, 0x65, 0x26, 0x2e, 0x41, 0xbe, 0x85, 0xc7, 0xe7, 0xc8, 0x4c, 0xa2, 0x72,
	0x6c, 0xba, 0x91, 0xf4, 0xb1, 0x1b, 0x42, 0x92, 0xe7, 0x1c, 0x3a, 0x35, 0xd3, 0x08, 0x76, 0x1d,
	0xc4, 0xc7, 0x90, 0x89, 0xc0, 0xcf, 0x7b, 0xfc, 0x91, 0x23, 0x74, 0x5d, 0xea, 0xa5, 0xcd, 0x64,
	0x4d, 0x1d, 0xfc, 0x0a, 0x50, 0x54, 0xa9, 0xc9, 0x73, 0x68, 0xdb, 0xc2, 0xf3, 0x71, 0xa9, 0xac,
	0xf1, 0x66, 0x90, 0x14, 0xf4, 0xc1, 0x18, 0xb6, 0x6e, 0x4c, 0xfb, 0x2d, 0x6b, 0x93, 0xcc, 0x2d,
	0xa9, 0xa5, 0x53, 0x2f, 0x10, 0xa8, 0x39, 0x9b, 0xa7, 0x26, 0x76, 0xcf, 0x83, 0x13, 0xd8, 0x2e,
	0x0b, 0x09, 0xd4, 0xe4, 0x19, 0x6c, 0x5a, 0x78, 0x5e, 0xd4, 0xfb, 0x9d, 0x96, 0xc2, 0x07, 0x7f,
	0x43, 0xcd, 0xce, 0xe8, 0xad, 0x52, 0x7a, 0xd0, 0x8c, 0x03, 0x66, 0xce, 0xa5, 0x0a, 0xb3, 0x72,
	0x8a, 0x75, 0x51, 0x66, 0xb5, 0x54, 0xe6, 0x0e, 0x54, 0x13, 0x25, 0xb2, 0xa3, 0xc4, 0x3e, 0x92,
	0x2f, 0x61, 0x2b, 0x46, 0x65, 0x8b, 0x08, 0x7c, 0xce, 0x0c, 0x73, 0x87, 0x49, 0xd3, 0xeb, 0xe4,
	0xc1, 0x17, 0xcc, 0xb0, 0xc1, 0x73, 0xa8, 0x4e, 0xd8, 0xfc, 0xde, 0x8d, 0xf8, 0xb7, 0x02, 0x8d,
	0x6c, 0x92, 0x6f, 0x69, 0xd0, 0xcc, 0x06, 0x26, 0x95, 0x69, 0x7a, 0xf9, 0xd2, 0x9e, 0xa0, 0xf6,
	0x7c, 0x2a, 0xe6, 0xab, 0xea, 0xd2, 0x6d, 0x17, 0xcb, 0x26, 0xeb, 0x1b, 0xe8, 0xea, 0x24, 0x8e,
	0xa5, 0x32, 0x25, 0x2f, 0xd4, 0x1c, 0x6e, 0xa7, 0x48, 0x64, 0xb3, 0x3e, 0xf8, 0xa7, 0x02, 0x5d,
	0xd7, 0x5c, 0xe4, 0xa5, 0x61, 0xb9, 0x76, 0x40, 0xe5, 0x03, 0x1c, 0xf0, 0x0c, 0x1a, 0xf9, 0xdf,
	0x6d, 0xac, 0x41, 0xcb, 0xc1, 0x07, 0xff, 0xd5, 0x61, 0xa7, 0x08, 0x9f, 0xa5, 0xd7, 0x09, 0x39,
	0x85, 0xed, 0x5f, 0x14, 0x32, 0x83, 0xd7, 0xb7, 0xc9, 0x4a, 0xb9, 0xde, 0xca, 0x2c, 0x79, 0x05,
	0x9d, 0x31, 0x9a, 0x87, 0xd1, 0x3a, 0x81, 0xed, 0x37, 0x31, 0xff, 0x80, 0xd2, 0xe8, 0x1d, 0xd9,
	0x97, 0x61, 0x6c, 0x16, 0x56, 0xea, 0x05, 0x06, 0xf8, 0x10, 0x52, 0x13, 0x20, 0x63, 0x34, 0xaf,
	0xed, 0x56, 0x94, 0x76, 0x72, 0x29, 0xbe, 0xf7, 0xd5, 0x32, 0x9b, 0xdd, 0x98, 0x84, 0x3f, 0xa0,
	0x5b, 0xee, 0xdb, 0xc4, 0x1a, 0x6f, 0x85, 0xe8, 0xe0, 0x3d, 0xde, 0xb5, 0x76, 0x1f, 0x43, 0xe7,
	0x88, 0xf3, 0xb3, 0xe2, 0x2a, 0xfa, 0x6c, 0xd5, 0x0b, 0xeb, 0x15, 0x6f, 0xfc, 0x0a, 0xb6, 0x3d,
	0x0c, 0xe5, 0x15, 0x3e, 0x80, 0xd6, 0xcf, 0x00, 0x47, 0x9c, 0x9f, 0x66, 0x57, 0xeb, 0xb2, 0xcb,
	0x77, 0x85, 0xc0, 0x31, 0x6c, 0xa5, 0xc5, 0xdc, 0x5f, 0xe3, 0xb8, 0xfd, 0x67, 0xab, 0xf8, 0x16,
	0x9b, 0xd6, 0xdd, 0x07, 0xd5, 0xf7, 0xef, 0x02, 0x00, 0x00, 0xff, 0xff, 0x1c, 0xa6, 0x1b, 0x2d,
	0xa3, 0x09, 0x00, 0x00,
}
