// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/usergroup/service.proto

package usergroup

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "user-api/rpc/user"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UserGroup struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	DisplayName          string            `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Description          string            `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Avatar               []byte            `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Banner               []byte            `protobuf:"bytes,5,opt,name=banner,proto3" json:"banner,omitempty"`
	GroupEmailAddress    string            `protobuf:"bytes,6,opt,name=group_email_address,json=groupEmailAddress" json:"group_email_address,omitempty"`
	Owner                string            `protobuf:"bytes,7,opt,name=owner" json:"owner,omitempty"`
	Type                 string            `protobuf:"bytes,8,opt,name=type" json:"type,omitempty"`
	Followers            []string          `protobuf:"bytes,9,rep,name=followers" json:"followers,omitempty"`
	AdminUsers           []string          `protobuf:"bytes,10,rep,name=admin_users,json=adminUsers" json:"admin_users,omitempty"`
	SubGroups            []string          `protobuf:"bytes,11,rep,name=sub_groups,json=subGroups" json:"sub_groups,omitempty"`
	Links                map[string]string `protobuf:"bytes,12,rep,name=links" json:"links,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Tags                 map[string]string `protobuf:"bytes,13,rep,name=tags" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UserGroup) Reset()         { *m = UserGroup{} }
func (m *UserGroup) String() string { return proto.CompactTextString(m) }
func (*UserGroup) ProtoMessage()    {}
func (*UserGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_d68a866fdf864457, []int{0}
}
func (m *UserGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserGroup.Unmarshal(m, b)
}
func (m *UserGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserGroup.Marshal(b, m, deterministic)
}
func (dst *UserGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserGroup.Merge(dst, src)
}
func (m *UserGroup) XXX_Size() int {
	return xxx_messageInfo_UserGroup.Size(m)
}
func (m *UserGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_UserGroup.DiscardUnknown(m)
}

var xxx_messageInfo_UserGroup proto.InternalMessageInfo

func (m *UserGroup) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserGroup) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *UserGroup) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UserGroup) GetAvatar() []byte {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *UserGroup) GetBanner() []byte {
	if m != nil {
		return m.Banner
	}
	return nil
}

func (m *UserGroup) GetGroupEmailAddress() string {
	if m != nil {
		return m.GroupEmailAddress
	}
	return ""
}

func (m *UserGroup) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *UserGroup) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *UserGroup) GetFollowers() []string {
	if m != nil {
		return m.Followers
	}
	return nil
}

func (m *UserGroup) GetAdminUsers() []string {
	if m != nil {
		return m.AdminUsers
	}
	return nil
}

func (m *UserGroup) GetSubGroups() []string {
	if m != nil {
		return m.SubGroups
	}
	return nil
}

func (m *UserGroup) GetLinks() map[string]string {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *UserGroup) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type GroupedUserGroups struct {
	Labels               []*UserGroup `protobuf:"bytes,1,rep,name=labels" json:"labels,omitempty"`
	Artists              []*UserGroup `protobuf:"bytes,2,rep,name=artists" json:"artists,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GroupedUserGroups) Reset()         { *m = GroupedUserGroups{} }
func (m *GroupedUserGroups) String() string { return proto.CompactTextString(m) }
func (*GroupedUserGroups) ProtoMessage()    {}
func (*GroupedUserGroups) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_d68a866fdf864457, []int{1}
}
func (m *GroupedUserGroups) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupedUserGroups.Unmarshal(m, b)
}
func (m *GroupedUserGroups) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupedUserGroups.Marshal(b, m, deterministic)
}
func (dst *GroupedUserGroups) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupedUserGroups.Merge(dst, src)
}
func (m *GroupedUserGroups) XXX_Size() int {
	return xxx_messageInfo_GroupedUserGroups.Size(m)
}
func (m *GroupedUserGroups) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupedUserGroups.DiscardUnknown(m)
}

var xxx_messageInfo_GroupedUserGroups proto.InternalMessageInfo

func (m *GroupedUserGroups) GetLabels() []*UserGroup {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *GroupedUserGroups) GetArtists() []*UserGroup {
	if m != nil {
		return m.Artists
	}
	return nil
}

type AdminUsers struct {
	AdminUserIds         []string `protobuf:"bytes,1,rep,name=admin_user_ids,json=adminUserIds" json:"admin_user_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdminUsers) Reset()         { *m = AdminUsers{} }
func (m *AdminUsers) String() string { return proto.CompactTextString(m) }
func (*AdminUsers) ProtoMessage()    {}
func (*AdminUsers) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_d68a866fdf864457, []int{2}
}
func (m *AdminUsers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdminUsers.Unmarshal(m, b)
}
func (m *AdminUsers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdminUsers.Marshal(b, m, deterministic)
}
func (dst *AdminUsers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdminUsers.Merge(dst, src)
}
func (m *AdminUsers) XXX_Size() int {
	return xxx_messageInfo_AdminUsers.Size(m)
}
func (m *AdminUsers) XXX_DiscardUnknown() {
	xxx_messageInfo_AdminUsers.DiscardUnknown(m)
}

var xxx_messageInfo_AdminUsers proto.InternalMessageInfo

func (m *AdminUsers) GetAdminUserIds() []string {
	if m != nil {
		return m.AdminUserIds
	}
	return nil
}

type Tag struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_d68a866fdf864457, []int{3}
}
func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (dst *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(dst, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*UserGroup)(nil), "resonate.api.user.UserGroup")
	proto.RegisterMapType((map[string]string)(nil), "resonate.api.user.UserGroup.LinksEntry")
	proto.RegisterMapType((map[string]string)(nil), "resonate.api.user.UserGroup.TagsEntry")
	proto.RegisterType((*GroupedUserGroups)(nil), "resonate.api.user.GroupedUserGroups")
	proto.RegisterType((*AdminUsers)(nil), "resonate.api.user.AdminUsers")
	proto.RegisterType((*Tag)(nil), "resonate.api.user.Tag")
}

func init() {
	proto.RegisterFile("rpc/usergroup/service.proto", fileDescriptor_service_d68a866fdf864457)
}

var fileDescriptor_service_d68a866fdf864457 = []byte{
	// 568 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x55, 0x9a, 0xae, 0x23, 0x37, 0x65, 0x1f, 0x66, 0x4c, 0x56, 0x19, 0x5a, 0xa9, 0x26, 0xe8,
	0x0b, 0xa9, 0x54, 0x10, 0x4c, 0x93, 0x78, 0xd8, 0xa0, 0xaa, 0x86, 0x06, 0x0f, 0xa1, 0x7b, 0xe1,
	0x25, 0x72, 0x9b, 0x4b, 0x65, 0x2d, 0x4d, 0x22, 0xdb, 0xed, 0x94, 0x47, 0xfe, 0x14, 0x7f, 0x8b,
	0xbf, 0x80, 0xec, 0xa4, 0xc9, 0x60, 0xa5, 0xda, 0xa4, 0xbd, 0x44, 0xbe, 0xf7, 0xdc, 0x73, 0x72,
	0x7d, 0x8f, 0x6d, 0x78, 0x26, 0xd2, 0x49, 0x6f, 0x2e, 0x51, 0x4c, 0x45, 0x32, 0x4f, 0x7b, 0x12,
	0xc5, 0x82, 0x4f, 0xd0, 0x4b, 0x45, 0xa2, 0x12, 0xb2, 0x2b, 0x50, 0x26, 0x31, 0x53, 0xe8, 0xb1,
	0x94, 0x7b, 0xba, 0xaa, 0x75, 0xa8, 0xbf, 0xaf, 0x59, 0xca, 0x7b, 0x4b, 0xe2, 0xdf, 0x9c, 0xce,
	0xaf, 0x3a, 0x38, 0x97, 0x12, 0xc5, 0x50, 0xeb, 0x91, 0x2d, 0xa8, 0xf1, 0x90, 0x5a, 0x6d, 0xab,
	0xeb, 0xf8, 0x35, 0x1e, 0x92, 0x17, 0xd0, 0x0c, 0xb9, 0x4c, 0x23, 0x96, 0x05, 0x31, 0x9b, 0x21,
	0xad, 0x19, 0xc4, 0x2d, 0x72, 0x5f, 0xd9, 0x0c, 0x49, 0x1b, 0xdc, 0x10, 0xe5, 0x44, 0xf0, 0x54,
	0xf1, 0x24, 0xa6, 0x76, 0x51, 0x51, 0xa5, 0xc8, 0x3e, 0x34, 0xd8, 0x82, 0x29, 0x26, 0x68, 0xbd,
	0x6d, 0x75, 0x9b, 0x7e, 0x11, 0xe9, 0xfc, 0x98, 0xc5, 0x31, 0x0a, 0xba, 0x91, 0xe7, 0xf3, 0x88,
	0x78, 0xf0, 0xc4, 0xec, 0x2e, 0xc0, 0x19, 0xe3, 0x51, 0xc0, 0xc2, 0x50, 0xa0, 0x94, 0xb4, 0x61,
	0x94, 0x77, 0x0d, 0x34, 0xd0, 0xc8, 0x69, 0x0e, 0x90, 0x3d, 0xd8, 0x48, 0xae, 0xb5, 0xcc, 0xa6,
	0xa9, 0xc8, 0x03, 0x42, 0xa0, 0xae, 0xb2, 0x14, 0xe9, 0x23, 0x93, 0x34, 0x6b, 0x72, 0x00, 0xce,
	0x8f, 0x24, 0x8a, 0x92, 0x6b, 0x14, 0x92, 0x3a, 0x6d, 0xbb, 0xeb, 0xf8, 0x55, 0x82, 0x1c, 0x82,
	0xcb, 0xc2, 0x19, 0x8f, 0x03, 0x3d, 0x26, 0x49, 0xc1, 0xe0, 0x60, 0x52, 0x7a, 0x42, 0x92, 0x3c,
	0x07, 0x90, 0xf3, 0x71, 0x60, 0x3a, 0x90, 0xd4, 0xcd, 0xf9, 0x72, 0x3e, 0x36, 0xb3, 0x93, 0xe4,
	0x03, 0x6c, 0x44, 0x3c, 0xbe, 0x92, 0xb4, 0xd9, 0xb6, 0xbb, 0x6e, 0xff, 0x95, 0x77, 0xcb, 0x0e,
	0xaf, 0x9c, 0xb4, 0x77, 0xa1, 0x2b, 0x07, 0xb1, 0x12, 0x99, 0x9f, 0xb3, 0xc8, 0x09, 0xd4, 0x15,
	0x9b, 0x4a, 0xfa, 0xd8, 0xb0, 0x5f, 0xae, 0x65, 0x8f, 0xd8, 0xb4, 0x20, 0x1b, 0x4e, 0xeb, 0x18,
	0xa0, 0x12, 0x24, 0x3b, 0x60, 0x5f, 0x61, 0x56, 0xd8, 0xa8, 0x97, 0x7a, 0x44, 0x0b, 0x16, 0xcd,
	0x97, 0x06, 0xe6, 0xc1, 0x49, 0xed, 0xd8, 0x6a, 0xbd, 0x07, 0xa7, 0x14, 0xbb, 0x0f, 0xb1, 0xf3,
	0xd3, 0x82, 0x5d, 0xd3, 0x0c, 0x86, 0x65, 0x5f, 0x92, 0xbc, 0x85, 0x46, 0xc4, 0xc6, 0x18, 0x49,
	0x6a, 0x99, 0x6d, 0x1c, 0xac, 0xdb, 0x86, 0x5f, 0xd4, 0x92, 0x77, 0xb0, 0xc9, 0x84, 0xe2, 0x52,
	0x49, 0x5a, 0xbb, 0x03, 0x6d, 0x59, 0xdc, 0xe9, 0x03, 0x9c, 0x56, 0xf6, 0x1c, 0xc1, 0x56, 0xe5,
	0x5f, 0xc0, 0xc3, 0xbc, 0x07, 0xc7, 0x6f, 0x96, 0x16, 0x9e, 0x87, 0xb2, 0xf3, 0x14, 0xec, 0x11,
	0x9b, 0xfe, 0x7b, 0xd2, 0xfb, 0xbf, 0x6d, 0xd8, 0x29, 0xff, 0xf0, 0x2d, 0xbf, 0x22, 0xe4, 0x0b,
	0x6c, 0x7f, 0x14, 0xc8, 0x14, 0x56, 0x37, 0x64, 0x6d, 0x67, 0xad, 0xb5, 0x28, 0xf9, 0x0c, 0xcd,
	0x21, 0xaa, 0x87, 0xd1, 0x3a, 0x87, 0xed, 0xcb, 0x34, 0xbc, 0x47, 0x6b, 0x74, 0x05, 0x3a, 0x98,
	0xa5, 0x2a, 0xd3, 0x52, 0x9f, 0x30, 0xc2, 0x87, 0x90, 0x1a, 0x01, 0x19, 0xa2, 0xba, 0xd0, 0xae,
	0xde, 0x38, 0x14, 0xff, 0xad, 0x6f, 0x1d, 0xad, 0x40, 0x6e, 0x1f, 0xaa, 0x11, 0xec, 0xdd, 0x9c,
	0x9b, 0x3c, 0xcb, 0x86, 0x18, 0x0b, 0x24, 0xfb, 0x2b, 0xd8, 0x23, 0x36, 0xbd, 0x9b, 0xea, 0x99,
	0xfb, 0xdd, 0x29, 0x1f, 0xd2, 0x71, 0xc3, 0xbc, 0x86, 0x6f, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff,
	0x95, 0xe7, 0x1b, 0x14, 0x60, 0x05, 0x00, 0x00,
}
