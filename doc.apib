FORMAT: 1A

# Users/Tracks API

Users/Tracks API is the main API to access Users, UserGroups, Tracks, TrackGroups and related collections.


## Users Collection [/twirp/resonate.api.user.UserService/]

### Get User [POST /twirp/resonate.api.user.UserService/GetUser]

TODO: add scope for restricted access (public/private user profile).

+ Request (application/json)

        {
            "id": "b09cd642-9df8-4f44-bb5a-169829043110"
        }

+ Response 200 (application/json)

        {
            "id": "b09cd642-9df8-4f44-bb5a-169829043110",
            "created_at": "2015-08-05T08:40:51.620Z",
            "updated_at": "2015-08-05T09:40:51.620Z",
            "email": "john@doe.com",
            "full_name": "john doe",

            "member": false,
            "owner_of_groups": [{
              "id": "d09cd642-9df8-4f44-bb5a-169829043110",
              "display_name": "DJ John",
              "avatar": "avatar"
            }],
            "favorite_tracks": ["b19cd642-9df8-4f44-bb5a-169829043110"],
            "followed_groups": ["b29cd642-9df8-4f44-bb5a-169829043110"],
        }



### Create a New User [POST /twirp/resonate.api.user.UserService/CreateUser]

Used for signup.

+ Request (application/json)

        {
            "email": "john@doe.com",
        }

+ Response 201 (application/json)

    + Body

            {
                "id": "b09cd642-9df8-4f44-bb5a-169829043110",
                "email": "john@doe.com",
            }

### Update a User [POST /twirp/resonate.api.user.UserService/UpdateUser]

+ Request (application/json)

        {
            "id": "b09cd642-9df8-4f44-bb5a-169829043110",
            "email": "john@doe.fr"
        }

+ Response 204 (application/json)

### Delete a User [POST /twirp/resonate.api.user.UserService/DeleteUser]


+ Request (application/json)

        {
            "id": "b09cd642-9df8-4f44-bb5a-169829043110"
        }

+ Response 204 (application/json)

### Add Favorite Track [POST /twirp/resonate.api.user.UserService/AddFavoriteTrack]

+ Request (application/json)

        {
            "user_id": "b09cd642-9df8-4f44-bb5a-169829043110",
            "track_id": "129f3a00-1022-4cb6-beda-8f7eeef8bd31"
        }

+ Response 204 (application/json)

### Remove Favorite Track [POST /twirp/resonate.api.user.UserService/RemoveFavoriteTrack]

+ Request (application/json)

        {
            "user_id": "b09cd642-9df8-4f44-bb5a-169829043110",
            "track_id": "129f3a00-1022-4cb6-beda-8f7eeef8bd31"
        }

+ Response 204 (application/json)

### Follow User Group [POST /twirp/resonate.api.user.UserService/FollowGroup]

+ Request (application/json)

        {
            "user_id": "b09cd642-9df8-4f44-bb5a-169829043110",
            "user_group_id": "129f3a00-1022-4cb6-beda-8f7eeef8bd31"
        }

+ Response 204 (application/json)

### Unfollow User Group [POST /twirp/resonate.api.user.UserService/UnfollowGroup]

+ Request (application/json)

        {
            "user_id": "b09cd642-9df8-4f44-bb5a-169829043110",
            "user_group_id": "129f3a00-1022-4cb6-beda-8f7eeef8bd31"
        }

+ Response 204 (application/json)

### TODO Get Feed [POST /twirp/resonate.api.user.UserService/GetFeed]

activity feed, needs pagination

+ Request (application/json)

        {
            "user_id": "b09cd642-9df8-4f44-bb5a-169829043110"
        }

+ Response 200 (application/json)

## UserGroups Collection [/twirp/resonate.api.user.UserGroupService/]

### Create a New UserGroup [POST /twirp/resonate.api.user.UserGroupService/CreateUserGroup]

The user who creates a user group is by default the owner of this user group.
Can be a user creating an artist or a label or a user profile.

To add members/memberOfGroups, refer to dedicated endpoint.

+ type (string) - type of user group: user, artist, label (or distributor: added internally)

+ Request (application/json)

        {
            "type": {
              "type": "artist"
            },
            "owner_id": "636f3a00-1022-4cb6-beda-8f7eeef8bd31",
            "display_name": "BestArtistEver",
            "short_bio": "I am the best artist ever",
            "avatar": "blob",
            "banner": "blob",
            "address": {
              "data": {"some": "address"}
            },
            "tags": [
              {"type": "genre", "name": "ambient"},
              {"type": "genre", "name": "experimental"}
            ],
            "links": [
                {"platform": "instagram", "uri": "https://www.instagram.com/bestartistever"},
                {"platform": "twitter", "uri": "https://twitter.com/bestartistever"}
            ],
            "recommended_artists": [
              {"id": "166f3a00-1022-4cb6-beda-8f7eeef8bd31"},
              {"id": "366f3a00-1022-4cb6-beda-8f7eeef8bd31"}
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "id": "b09cd642-9df8-4f44-bb5a-169829043110",
                "owner_id": "636f3a00-1022-4cb6-beda-8f7eeef8bd31",
                "type": {
                  "id": "736f3a00-1022-4cb6-beda-8f7eeef8bd31",
                  "type": "artist"
                },
                "display_name": "BestArtistEver"
                "short_bio": "I am the best artist ever",
                "avatar": "blob",
                "banner": "blob",
                "links": [
                    {"id": "406f3a00-1022-4cb6-beda-8f7eeef8bd31", "platform": "instagram", "uri": "https://www.instagram.com/bestartistever"},
                    {"id": "416f3a00-1022-4cb6-beda-8f7eeef8bd31", "platform": "twitter", "uri": "https://twitter.com/bestartistever"}
                ],
                "address": {
                  "id": "427f3a00-1022-4cb6-beda-8f7eeef8bd31",
                  "data": {"some": "address"}
                },
                "privacy": {
                  "id": "427f3a00-1022-4cb6-beda-8f7eeef8bd31",
                  "private": false,
                  "owned_tracks": true,
                  "supported_artists": true,
                },
                "tags": [
                  {"id": "426f3a00-1022-4cb6-beda-8f7eeef8bd31", "type": "genre", "name": "ambient"},
                  {"id": "436f3a00-1022-4cb6-beda-8f7eeef8bd31", "type": "genre", "name": "experimental"}
                ],
                "recommended_artists": [
                  {"id": "166f3a00-1022-4cb6-beda-8f7eeef8bd31", "display_name": "name", "avatar": "blob"},
                  {"id": "366f3a00-1022-4cb6-beda-8f7eeef8bd31", "display_name": "name", "avatar": "blob"}
                ]
            }

### Update UserGroup [POST /twirp/resonate.api.user.UserGroupService/UpdateUserGroup]

If the request body doesn't contain a certain user group attribute, it will be set to its zero value.

To update address or privacy, update desired fields (data for address; private, owned_track and supported_artists for privacy). Type and owner_id are not updatable.

To add or remove tags or links:
- add {...obj} to the corresponding array in the request body with info (type, name for tags; platform, uri for links).
- remove {"id": "idToRemove"} from the array.

To add or remove recommended_artists:
- add {"id": "idToadd"} to the corresponding array in the request body.
- remove {"id": "idToRemove"} from the array.


+ Request (application/json)

        {
            "id": "b09cd642-9df8-4f44-bb5a-169829043110",
            "description": "I am the very best artist ever",
            "avatar": "blob",
            "owner_id": "636f3a00-1022-4cb6-beda-8f7eeef8bd31",
            "privacy": {
                "id": "427f3a00-1022-4cb6-beda-8f7eeef8bd31",
                "private": false,
                "owned_tracks": true,
                "supported_artists": true,
            },
            "address": {
                "id": "437f3a00-1022-4cb6-beda-8f7eeef8bd31",
                "data": {"some": "new address"}
            },
            "type": {
                "id": "736f3a00-1022-4cb6-beda-8f7eeef8bd31",
                "type": "artist"
            }
        }

+ Response 204 (application/json)

### Delete UserGroup [POST /twirp/resonate.api.user.UserGroupService/DeleteUserGroup]

+ Request (application/json)

        {
            "id": "b09cd642-9df8-4f44-bb5a-169829043110"
        }

+ Response 204 (application/json)

### Get Label UserGroups [POST /twirp/resonate.api.user.UserGroupService/GetLabelUserGroups]

Return id, display_name and avatar for each labels.
Support pagination (?page=2?limit=50).

+ Response 200 (application/json)

    + Body

            {
                "labels": [
                    {
                      "id": "b09cd642-9df8-4f44-bb5a-169829043110",
                      "display_name": "best label ever",
                      "avatar": "blob"
                    }
                ]
            }

### Get UserGroup [POST /twirp/resonate.api.user.UserGroupService/GetUserGroup]

scope private/public.

+ Request (application/json)

        {
            "id": "b09cd642-9df8-4f44-bb5a-169829043110"
        }

+ Response 200 (application/json)

    + Body

        {
            "id": "b09cd642-9df8-4f44-bb5a-169829043110",
            "owner": {
                "id": "636f3a00-1022-4cb6-beda-8f7eeef8bd31"
            },
            "display_name": "BestArtistEver"
            "description": "long bio",
            "short_bio": "short bio",
            "avatar": "blob",
            "banner": "blob",
            "members": [
                {
                    "id": "d38bcdb7-9a05-4077-a6c7-6aec285b865e",
                    "display_name": "John Doe",
                    "avatar": "blob",
                    "tags": [
                        {
                          "type": "role",
                          "name": "guitarist"
                        },
                        {
                          "type": "role",
                          "name": "singer"
                        }
                    ]
                }
            ],
            "member_of_groups": [
                {
                    "id": "d09bcdb7-9a05-4077-a6c7-6aec285b865e",
                    "display_name": "Best label ever",
                    "avatar": "blob"
                }
            ],
            "links": [
                {"id": "406f3a00-1022-4cb6-beda-8f7eeef8bd31", "platform": "instagram", "uri": "https://www.instagram.com/bestartistever"},
                {"id": "416f3a00-1022-4cb6-beda-8f7eeef8bd31", "platform": "twitter", "uri": "https://twitter.com/bestartistever"}
            ],
            "address": {
              "id": "427f3a00-1022-4cb6-beda-8f7eeef8bd31",
              "data": {"some": "address"}
            },
            "tags": [
              {"id": "426f3a00-1022-4cb6-beda-8f7eeef8bd31", "type": "genre", "name": "ambient"},
              {"id": "436f3a00-1022-4cb6-beda-8f7eeef8bd31", "type": "genre", "name": "experimental"}
            ],
            "recommended_artists": [
              {"id": "166f3a00-1022-4cb6-beda-8f7eeef8bd31", "display_name": "name", "avatar": "blob"},
              {"id": "366f3a00-1022-4cb6-beda-8f7eeef8bd31", "display_name": "name", "avatar": "blob"}
            ],
        }

### Get User Group Types [POST /twirp/resonate.api.user.UserGroupService/GetUserGroupTypes]

Return all existing group taxonomies (except distributor, handled internally).

+ Response 200 (application/json)

    + Body

        {
            "types": [
                {"id":  "156f3a00-1022-4cb6-beda-8f7eeef8bd31", "type": "user", "name": "User"},
                {"id":  "176f3a00-1022-4cb6-beda-8f7eeef8bd31", "type": "artist", "name": "Artist"},
                {"id":  "186f3a00-1022-4cb6-beda-8f7eeef8bd31", "type": "label", "name": "Label"},
            ]
        }

### Add Members [POST /twirp/resonate.api.user.UserGroupService/AddMembers]

For artists to add user profiles (e.g. band members). You can define their roles within this artist using `tags` (with role as type) and set `display_name` (if not set it'll be the added user_group display_name).
For labels to add artists.
For distributors to add labels.

members array contains user groups to add.

Can also be used for an artist (members array only contains 1 element with artist id) to add itself as a member of a label (user_group_id).

+ Request (application/json)

        {
            "user_group_id": "b09cd642-9df8-4f44-bb5a-169829043110",
            "members": [
                {
                    "id": "c09cd642-9df8-4f44-bb5a-169829043110",
                    "display_name": "John Doe",
                    "tags": [
                        {
                          "type": "role",
                          "name": "guitarist"
                        },
                        {
                          "type": "role",
                          "name": "singer"
                        }
                    ]
                },
                {
                    "id": "c04cd642-9df8-4f44-bb5a-169829043110",
                    "display_name": "Jane Doe",
                    "tags": [
                        {
                          "type": "role",
                          "name": "bassist"
                        }
                    ]
                }

            ]
        }

+ Response 204 (application/json)

### Delete Members [POST /twirp/resonate.api.user.UserGroupService/DeleteMembers]

For artists to remove user profiles (e.g. band members).
For labels to remove artists.
For distributors to remove labels.

members array contains user groups to remove.

Can also be used for an artist (members array only contains 1 element with artist id) to remove itself as a member of a label (user_group_id).

+ Request (application/json)

      {
          "user_group_id": "b09cd642-9df8-4f44-bb5a-169829043110",
          "members": [
              {
                "id": "b19cd642-9df8-4f44-bb5a-169829043110"
              },
              {
                "id": "b89cd642-9df8-4f44-bb5a-169829043110"
              }
          ]
      }

+ Response 204 (application/json)

## Tracks Collection [/twirp/resonate.api.user.Track]

### Create Track [POST /twirp/resonate.api.user.Track/CreateTrack]
Used by track server API.
Tracks are created and only after the TrackGroup they are part of is created.

+ Request (application/json)
        {
            "title": "Greatest track in the world",
            "status": "free",
            "track_number": 1,
            "duration": 250.15,
            "creator_id": "b19cd642-9df8-4f44-bb5a-166529043111",
            "user_group_id": "b19cd642-9df8-4f44-bb5a-166529043112",
            "artists": [
              {"id": "b19cd642-9df8-4f44-bb5a-166529043113"},
              {"id": "b20cd642-9df8-4f44-bb5a-166529043113"}
            ],
            "track_server_id": "",
            "tags": [
              {"type": "genre", "name": "ambient"},
              {"type": "genre", "name": "experimental"}
            ]
        }

+ Response 201 (application/json)

        {
            "id": "b19cd642-9df8-4f44-bb5a-166529043110",
            "title": "Greatest track in the world",
            "status": "free",
            "track_number": 1,
            "duration": 250.15,
            "creator_id": "b19cd642-9df8-4f44-bb5a-166529043111",
            "user_group_id": "b19cd642-9df8-4f44-bb5a-166529043112",
            "artists": [
              {"id": "b19cd642-9df8-4f44-bb5a-166529043113", "display_name": "artist name 1", "avatar": "blob"},
              {"id": "b20cd642-9df8-4f44-bb5a-166529043113", "display_name": "artist name 2", "avatar": "blob"}
            ],
            "track_server_id": "",
            "tags": [
              {"id": "z20cd642-9df8-4f44-bb5a-166529043113", "type": "genre", "name": "ambient"},
              {"id": "c90cd642-9df8-4f44-bb5a-166529043113", "type": "genre", "name": "experimental"}
            ]
        }

### Update Track [POST /twirp/resonate.api.user.Track/UpdateTrack]

CreatorId and UserGroupId are immutable.
Tracks can be added to a track group from dedicated endpoint in TrackGroup Service AddTracksToTrackGroup

+ Request (application/json)

        {
          "id": "b19cd642-9df8-4f44-bb5a-166529043110",
          "title": "Worst track in the world",
          "status": "paid",
          "track_number": 1,
          "duration": 250.15,
          "creator_id": "b19cd642-9df8-4f44-bb5a-166529043111",
          "user_group_id": "b19cd642-9df8-4f44-bb5a-166529043112",
          "track_server_id": "c29cd642-9df8-4f44-bb5a-166529043112",
        }

+ Response 204 (application/json)

### Delete Track [POST /twirp/resonate.api.user.Track/DeleteTrack]

+ Request (application/json)

        {
            "id": "b09cd642-9df8-4f44-bb5a-169829043110"
        }

+ Response 204 (application/json)

### Get Track [POST /twirp/resonate.api.user.Track/GetTrack]


+ Request (application/json)

        {
            "id": "b09cd642-9df8-4f44-bb5a-169829043110"
        }

+ Response 200 (application/json)

            {
                "id": "b19cd642-9df8-4f44-bb5a-166529043110",
                "track_server_id": "c9b47086-3212-40c6-b9ec-c9b9cc29e378",
                "owner_id": "d9b47086-3212-40c6-b9ec-c9b9cc29e378",
                "user_group_id": "e9b47086-3212-40c6-b9ec-c9b9cc29e378",
                "title": "Greatest track in the world",
                "status": "free",
                "duration": 250.25,
                "track_number": 1,
                "enabled": true,
                "tags": [
                  {"id": "z20cd642-9df8-4f44-bb5a-166529043113", "type": "genre", "name": "ambient"},
                  {"id": "c90cd642-9df8-4f44-bb5a-166529043113", "type": "genre", "name": "experimental"}
                ],
                "artists": [
                  {"id": "b19cd642-9df8-4f44-bb5a-166529043113", "display_name": "artist name 1", "avatar": "blob"},
                  {"id": "b20cd642-9df8-4f44-bb5a-166529043113", "display_name": "artist name 2", "avatar": "blob"}
                ],
                "track_groups": [
                  {"id": "c19cd642-9df8-4f44-bb5a-166529043113", "title": "album name", "cover": "blob"},
                ]
            }

## TrackGroups Collection [/twirp/resonate.api.user.TrackGroup]
TODO
### Create TrackGroup [POST /twirp/resonate.api.user.Track/CreateTrackGroup]

artist EP, LP, user playlist...

+ Request (application/json)

        {
            "creator_id": "b09cd642-9df8-4f44-bb5a-169829043110",
            "tracks": [
                "c09cd642-9df8-4f44-bb5a-169829043110",
                "a09cd642-9df8-4f44-bb5a-169829043110"
            ],
            "title": "Greatest Album",
            "publish_date": "2015-08-05"
        }

+ Response 200 (application/json)

        {
            "id": "a3ba2ecb-5594-4fc9-bf2d-f6c8bd21bd05"
            "created_at": "2015-08-05T08:40:51.620Z",
            "updated_at": "2015-08-05T08:40:51.620Z",
            "creator": [
                {
                    "id": "b09cd642-9df8-4f44-bb5a-169829043110"
                }
            ],
            "tracks": [
                {
                    "id": "c09cd642-9df8-4f44-bb5a-169829043110"
                },
                {
                    "id": "a09cd642-9df8-4f44-bb5a-169829043110"
                }
            ],
            "title": "Greatest Album",
            "publish_date": "2015-08-05"

        }

### Update TrackGroup [POST /twirp/resonate.api.user.Track/UpdateTrackGroup]

+ Request (application/json)

        {
            "title": "Worst Album"
        }

+ Response 204 (application/json)

### Add Tracks To TrackGroup [POST /twirp/resonate.api.user.Track/AddTracksToTrackGroup]

Can be used to add a track to a playlist, lp, ep, single (all types of track group).

+ Request (application/json)

        {
            "track_group_id": "bd3f89f6-e7d8-4e10-9926-a32b6bff125d",
            "tracks": "TODO"
        }

+ Response 204 (application/json)

### Delete Tracks From TrackGroup [POST /twirp/resonate.api.user.Track/DeletesTrackFromTrackGroup]

+ Request (application/json)

        {
            "track_group_id": "bd3f89f6-e7d8-4e10-9926-a32b6bff125d",
            "tracks": "TODO"
        }

+ Response 204 (application/json)

### Delete TrackGroup [POST /twirp/resonate.api.user.Track/DeleteTrackGroup]

+ Request (application/json)

        {
            "id": "a3ba2ecb-5594-4fc9-bf2d-f6c8bd21bd05"
        }

+ Response 204 (application/json)

### Get TrackGroup [POST /twirp/resonate.api.user.Track/GetTrackGroup]
TODO
+ Request (application/json)

        {
            "track_group_id": "bd3f89f6-e7d8-4e10-9926-a32b6bff125d"
        }

+ Response 200 (application/json)

        [
        ]
